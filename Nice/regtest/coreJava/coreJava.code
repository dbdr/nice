// -*- mode:java -*-

/*
  Test of core java features:
  - builtin types (integers, floats, chars)
  - ...

  Code must go inside the braces. 

  p(String s) is a method that calls System.out.println(s)

  A Java and Nice version will be generated automatically
  from this file, and their output will be compared.
 */

{
  //   STRINGS
  p("Hello, world!");
  p("String " + "\t\t" + "Z\70 \12X \101 concatenation"); // escapes, octal escape
  p("\u0041\u0042\u0043"); // unicode escapes

  //   CHARS

  p("" + 'A' + '\n' + '\u0201' + '\u4567');
  
  // unicode in identifiers
  int é\u0123 = 12;
  p("" + é\u0123);

  //   ARITHMETIC

  {
    // ints
    p("1 = " + 1);
    p("1+1 = " + (1+1));
  
    int i = 100;
    long j = 123;
    p("100 + 123 = " + (i+j));
    p("" + (i+(j-i)*(j+i*i)-4));

    p("" + (i++));
    p("" + i);
    i = i++;
    i++;
    i--;
    p("" + i);
    j=--i;
    j=j;
    int k=++i;
    p("" + i + " " + j + " " + k);
    j = k = i;
    p("" + i + " " + j + " " + k);

    A a = new A();

    p("x=" + a.x);
    a.x = 3;
    p("x=" + a.x);

    i = a.x++;
    j = a.x++;
    j = a.y--;
    p("x=" + a.x + ", i=" + i + ", j=" + j);
    short l = 200;
    j = l++;
    p("" + j + " " + l);
    
    // floats
    float x = 0.1f;
    double y = 3.4;
    p("0.1 - 3.4 = " + (x-y));
    
    p("" + (i+(j-y)*x));
  }
  
  // booleans
  p("" + ((false && true) | true));
  boolean b = false;
  if(b) p("A"); else p("B");
  p(!b ? "A" : (b ? "B" : "C"));

  //   LOOPS
  for (int i=0; i<5; ++i)
    {
      int j=i;
      while (j>0)
	{
	  p("i=" + i + ", j=" + j);
	  --j;
	}
    }

  // switch
  /*
  switch(3){
  case 0: p("0");
  case 3: p("3");
  case 4: p("4");
    break;
  case 5: p("5");
  default: p("default");
  }
  */

  //   ARRAYS
  
  String[] t;
  t = new String[2];
  t[0] = "Hello, ";
  t[1] = "world!";
  for (int i = 0; i<t.length; i++)
    p(t[i]);
  
}
