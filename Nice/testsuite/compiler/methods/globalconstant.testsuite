/// PASS
  /// Toplevel
  let int ONE = 1;
  let int TWO = 2;
  int fib(int n);
  fib(n@int) = fib(n-2) + fib(n-1);
  fib(ONE) = 1;
  fib(TWO) = 1;

/// PASS
  assert(foo("abc"));
  /// Toplevel
  let String abc = "abc";
  let String xyz = "xyz";
  boolean foo(String);
  foo(s) = false;
  foo(abc) = true;
  foo(xyz) = false;

/// FAIL
  /// Toplevel
  let int xxx = 10;
  void foo(int);
  foo(n) {}
  foo(xxx) {}
  foo(10) {}

/// FAIL
  /// Toplevel
  var int xxx = 10;
  void foo(int);
  foo(n) {}
  foo(xxx) {}

/// PASS
  assert(foo("abc"));
  /// Toplevel
  let String abc = "abc";
  class A {
    String abc = "";
  }
  boolean foo(String);
  foo(s) = false;
  foo(abc) = true;

/// PASS
  assert(foo(xxx));
  /// Toplevel
  class A {}
  let A xxx = new A();
  let A yyy = new A();
  boolean foo(A);
  foo(a) = false;
  foo(xxx) = true;
  foo(yyy) = false;

/// PASS
  /// package a
  /// Toplevel
  class A {}
  let A xxx = new A();
  let A yyy = new A();
  boolean foo(A);
  foo(a) = false;
  foo(xxx) = true;
  foo(yyy) = false;
  /// package b import a
  assert(foo(xxx));

/// FAIL
  /// Toplevel
  class A {}
  let A xxx = new A();
  void foo(A);
  foo(a) {}
  foo(xxx) {}
  foo(xxx) {}

/// PASS
  /// package a
  /// Toplevel
  class Color {}
  let Color red = new Color();
  let Color blue = new Color();
  let Color green = new Color();
  String name(Color);
  name(color) = "unknown color";
  name(red) = "red";
  name(blue) = "blue";
  name(green) = "green";
  /// package b import a
  assert red.name().equals("red");
  assert blue.name().equals("blue");
  assert green.name().equals("green");

/// PASS
  assert foo(2)==2;
  assert foo(3)==1;
  assert foo(4)==0;
  /// Toplevel
  let int xyz = 3;
  int foo(int n);
  foo(n>xyz) = 0;
  foo(xyz) = 1;  
  foo(n<xyz) = 2;

/// FAIL
  /// Toplevel
  var int xyz = 3;
  void foo(int n);
  foo(n) {}
  foo(n>xyz) {}  

/// FAIL
  /// Toplevel
  var String xyz = "xyz";
  void foo(int n);
  foo(n) {}
  foo(n>xyz) {}  

/// FAIL
  /// Toplevel
  void foo(int n);
  foo(n) {}
  foo(n>xyz) {}  


/// PASS
  assert foo(END_OF_TIME);
  /// Toplevel
  let Date END_OF_TIME = new Date(Long.MAX_VALUE);
  boolean foo(Date d);
  foo(d) = false;
  foo(END_OF_TIME) = true;

/// FAIL
  /// Toplevel
  boolean foo(String d);
  foo(d) = false;
  foo(END_OF_TIME) = true;
  let Date END_OF_TIME = new Date(Long.MAX_VALUE);

/// PASS
  /// package a
  /// toplevel
  let Date END_OF_TIME = new Date(Long.MAX_VALUE);
  void foo(Date d);
  foo(d) {}
  foo(END_OF_TIME) {}
  /// package b import a
  foo(new Date());
