/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2001                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package bossa.syntax;

/**
   Helper functions.

   @version $Date$
   @author Daniel Bonniot (bonniot@users.sourceforge.net)
 */

?LocatedString identString(?Expression);
identString(e) = null;
identString(e@IdentExp) = e.ident;
identString(e@SymbolExp) = e.getName();

boolean isCallTo(CallExp e, String name) = 
  identString(e.function).toString().equals(name);

boolean isNullExp(Expression);
isNullExp(e@Expression) = false;
isNullExp(e@NullExp) = true;

?MonoSymbol localVariable(Expression);
localVariable(e@Expression) = null;
localVariable(e@SymbolExp)
{
  if (e.getSymbol() instanceof bossa.syntax.MonoSymbol)
    return cast(e.getSymbol());
  return null;
}

mlsub.typing.Monotype makeSure(mlsub.typing.Monotype m) = 
  bossa.syntax.Monotype.sure(nice.tools.code.Types.rawType(m));

// Local Variables:
// nice-xprogram: "nicec -d \"$HOME/Nice/classes\" --sourcepath=\"$HOME/Nice/src\" --classpath=\"$HOME/Nice/classes\""
// End:
