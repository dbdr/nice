/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2005                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package nice.tools.visibility;

/**
   Flat lookup mode.

   In this mode, symbols in the current scope do not shadow <i>visibile</i>
   symbols in imported scopes.

   @author Daniel Bonniot (bonniot@users.sf.net)
 */

<Sym> List<Sym> getFlat(Scope<Sym> this, String key)
{
  List<Sym> res = new LinkedList();

  ?Scope<Sym> s = this;
  while (s != null)
    {
      assert this != null;

      ?List<Sym> temp = s.map[key];
      if (temp != null)
	res.addAll(temp);

      for (o : s.opens)
	{
	  temp = o.publicMap[key];
	  if (temp != null)
	    res.addAll(temp);
	}

      s = s.parent;
    }

  return res;
}
