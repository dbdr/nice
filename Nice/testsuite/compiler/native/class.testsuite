/// PASS
  Class c = String.class;
  assert (! c.isArray());
  assert (c.getName().equals("java.lang.String"));

/// PASS
  Class c = String[].class;
  assert (c.isArray());
  assert (c.getName().equals("[Ljava.lang.String;"));

/// PASS
  Class c = String[][].class;
  assert (c.isArray());
  assert (c.getName().equals("[[Ljava.lang.String;"));

/// FAIL
  Class c = /* /// FAIL HERE */ NotExisting.class;

/// FAIL
  Class<NotExisting> c = /* /// FAIL HERE */ NotExisting.class;

/// FAIL
  Class<String> c = /* /// FAIL HERE */ NotExisting.class;

/// FAIL
  Class<String> /* /// FAIL HERE */ c = java.io.File.class;

/// FAIL
  /// Toplevel
Class<String> unsafe(Class c) = c;

/// PASS
  /// Toplevel
boolean isIntClass(Class c) = c == int.class || int.class == c;

<T> boolean foo(T,T) = false;

boolean classTest(Class c) = foo(c, String.class) || foo(String.class, c);

/// PASS
  foo(String.class);
  /// Toplevel
void foo(Class) {}
<Number T> void foo(Class<T>) {}
