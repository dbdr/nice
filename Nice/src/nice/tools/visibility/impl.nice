/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2005                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package nice.tools.visibility;

/**
   Implementation.

   @author Daniel Bonniot (bonniot@users.sf.net)
 */

add(Scope this, key, value, visibility) = map.add(key, value);
add(Scope this, key, value, familial)
{
  if (parent != null)
    notNull(parent).add(key, value, familial);
  else
    super;
}
add(Scope this, key, value, general)
{
  // Put the symbol at the highest possible level
  if (parent != null)
    notNull(parent).add(key, value, general);
  else
    publicMap.add(key, value);
}

remove(Scope this, key, value)
{
  map.remove(key, value);

  if (parent != null)
    notNull(parent).remove(key, value);
  else
    publicMap.remove(key, value);
}

addImplicitOpen(Scope this, Scope scope) = opens.add(scope);
