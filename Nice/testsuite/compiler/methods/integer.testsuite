/// PASS
  /// Toplevel
  long fac(long n);
  fac(n@long) = n*fac(n-1);
  fac(1) = 1;
  
/// PASS
  /// Toplevel
  int fib(int n);
  fib(n@int) = fib(n-2) + fib(n-1);
  fib(1) = 1;
  fib(2) = 1;

/// FAIL  
  /// Toplevel
  int ack(int x, int y);
  // missing (0,0) case
  ack(0, y@int) = y+1;
  ack(x@int, 0) = ack(x-1, 1);
  ack(x@int, y@int) = ack(x-1, ack(x, y-1));


/// FAIL  
  /// Toplevel
  String toStr(char);
  toStr(@char) = "";
  toStr('a') = "a";
  toStr('b') = "b";
  toStr('a') = "a";

/// PASS
  /// package a
  assert(bar(-1)==1);
  /// Toplevel
  int bar(int);
  bar(n@int) = n;
  bar(-1) = 1;
  bar(-12389) = 12389;
  bar(3920) = -3920;

  /// package b import a
  ;  

/// PASS
  /// package a
  /// Toplevel
  boolean foo(char);
  foo(@char) = false;
  foo(='\1') = true;
  foo(='\3') = false;
  /// package b import a
  assert foo('\1');

/// FAIL
 /// Toplevel
 // The default case is missing
void foo(short);
foo(0) {}
foo(1) {}

/// PASS
  /// Toplevel
  int fib(int n);
  fib(n) = fib(n-2) + fib(n-1);
  fib(1) = 1;
  fib(2) = 1;

/// PASS  
  /// Toplevel
  String toStr(char);
  toStr(c@char) = "";
  toStr('a') = "a";
  toStr('b') = "b";

/// FAIL
  /// Toplevel
  void foo(long);
  foo(@long) {}
  foo(@int) {}

/// FAIL
  /// Toplevel
  void foo(long);
  foo(@long) {}
  foo(#int) {}

/// PASS
  /// Toplevel
  String getStr(int i, String str); 
  getStr(=0, str@String) = "no "+str; 
  getStr(=1, str@String) = "one "+str; 
  getStr(=2, str@String) = "many "+str; 
  getStr(i, str@String) = "unknown code"; 
