
/**************************************************************************/
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/


package nice.ui.common;


/**
 * Methods to safely convert java listeners to their nice pendants.
 * Raise a NoNiceListenerException if this is not possible. The exception
 * has to be initialized with the listener that was found to not be a nice one.
 * so that code calling these methods can work on with the non nice
 * listener, if it wants to do so
 */

NiceActionListener toNiceActionListener(EventListener);
toNiceActionListener(NiceActionListener this) = this;
toNiceActionListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceActionListener", listener: this);
}

NiceItemListener toNiceItemListener(EventListener);
toNiceItemListener(NiceItemListener this) = this;
toNiceItemListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceItemListener", listener: this);
}

NiceTextListener toNiceTextListener(EventListener);
toNiceTextListener(NiceTextListener this) = this;
toNiceTextListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceTextListener", listener: this);
}

NiceAdjustmentListener toNiceAdjustmentListener(EventListener);
toNiceAdjustmentListener(NiceAdjustmentListener this) = this;
toNiceAdjustmentListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceAdjustmentListener", listener: this);
}

NiceContainerListener toNiceContainerListener(EventListener);
toNiceContainerListener(NiceContainerListener this) = this;
toNiceContainerListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceContainerListener", listener: this);
}

NiceWindowListener toNiceWindowListener(EventListener);
toNiceWindowListener(NiceWindowListener this) = this;
toNiceWindowListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceWindowListener", listener: this);
}

NiceComponentListener toNiceComponentListener(EventListener);
toNiceComponentListener(NiceComponentListener this) = this;
toNiceComponentListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceComponentListener", listener: this);
}

NiceFocusListener toNiceFocusListener(EventListener);
toNiceFocusListener(NiceFocusListener this) = this;
toNiceFocusListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceFocusListener", listener: this);
}

NiceHierarchyBoundsListener toNiceHierarchyBoundsListener(EventListener);
toNiceHierarchyBoundsListener(NiceHierarchyBoundsListener this) = this;
toNiceHierarchyBoundsListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceHierarchyBoundsListener", listener: this);
}

NiceHierarchyListener toNiceHierarchyListener(EventListener);
toNiceHierarchyListener(NiceHierarchyListener this) = this;
toNiceHierarchyListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceHierarchyListener", listener: this);
}

NiceInputMethodListener toNiceInputMethodListener(EventListener);
toNiceInputMethodListener(NiceInputMethodListener this) = this;
toNiceInputMethodListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceInputMethodListener", listener: this);
}

NiceKeyListener toNiceKeyListener(EventListener);
toNiceKeyListener(NiceKeyListener this) = this;
toNiceKeyListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceKeyListener", listener: this);
}

NiceMouseListener toNiceMouseListener(EventListener);
toNiceMouseListener(NiceMouseListener this) = this;
toNiceMouseListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceMouseListener", listener: this);
}

NiceMouseMotionListener toNiceMouseMotionListener(EventListener);
toNiceMouseMotionListener(NiceMouseMotionListener this) = this;
toNiceMouseMotionListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceMouseMotionListener", listener: this);
}

NiceDragSourceListener toNiceDragSourceListener(EventListener);
toNiceDragSourceListener(NiceDragSourceListener this) = this;
toNiceDragSourceListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceDragSourceListener", listener: this);
}

NiceDragGestureListener toNiceDragGestureListener(EventListener);
toNiceDragGestureListener(NiceDragGestureListener this) = this;
toNiceDragGestureListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceDragGestureListener", listener: this);
}

NiceDropTargetListener toNiceDropTargetListener(EventListener);
toNiceDropTargetListener(NiceDropTargetListener this) = this;
toNiceDropTargetListener(this)
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceDropTargetListener", listener: this);
}

//JDK1.4  NiceAWTEventListener toNiceAWTEventListener(EventListener);
//JDK1.4  toNiceAWTEventListener(NiceAWTEventListener this) = this;
//JDK1.4  toNiceAWTEventListener(this)
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceAWTEventListener", listener: this);
//JDK1.4  }

//JDK1.4  NiceWindowFocusListener toNiceWindowFocusListener(EventListener);
//JDK1.4  toNiceWindowFocusListener(NiceWindowFocusListener this) = this;
//JDK1.4  toNiceWindowFocusListener(this)
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceWindowFocusListener", listener: this);
//JDK1.4  }

//JDK1.4  NiceWindowStateListener toNiceWindowStateListener(EventListener);
//JDK1.4  toNiceWindowStateListener(NiceWindowStateListener this) = this;
//JDK1.4  toNiceWindowStateListener(this)
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceWindowStateListener", listener: this);
//JDK1.4  }

//JDK1.4  NiceMouseWheelListener toNiceMouseWheelListener(EventListener);
//JDK1.4  toNiceMouseWheelListener(NiceMouseWheelListener this) = this;
//JDK1.4  toNiceMouseWheelListener(this) 
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceMouseWheelListener", listener: this);
//JDK1.4  }

//JDK1.4  NiceDragSourceMotionListener toNiceDragSourceMotionListener(EventListener);
//JDK1.4  toNiceDragSourceMotionListener(NiceDragSourceMotionListener this) = this;
//JDK1.4  toNiceDragSourceMotionListener(this)
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceDragSourceMotionListener", listener: this);
//JDK1.4  }
