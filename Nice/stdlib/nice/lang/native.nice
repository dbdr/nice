/****************************************************************************
 *                                 N I C E                                  *
 *              A high-level object-oriented research language              *
 *                         (c) Daniel Bonniot 2004                          *
 *                                                                          *
 *  This package is free software; you can redistribute it and/or modify    *
 *  it under the terms of the GNU General Public License as published by    *
 *  Free Software Foundation; either version 2 of the License, or (at your  *
 *  option) any later version.                                              *
 *                                                                          *
 *  As a special exception, the copyright holders of this library give you  *
 *  permission to link this library with independent modules to produce an  *
 *  executable, regardless of the license terms of these independent        *
 *  modules, and to copy and distribute the resulting executable under      *
 *  terms of your choice.                                                   *
 ****************************************************************************/

package nice.lang;

/**
   Various native constructs.

   @version $Date$
   @author Daniel Bonniot (Daniel.Bonniot@inria.fr)
 */

/**
   Throw the given throwable object. This stops the normal flow of execution,
   and transfers to the closest englobing <code>catch</code> block that matches
   the thrown object, executing englobing <code>finally</code> blocks along the
   way.
*/
void `throw`(java.lang.Throwable exception) = inline nice.lang.inline.Throw();

/**
   Tests whether a value is an instance of a given class.

   @return true  if value is not null, and its class is either the given class
           or one of its subclasses.
*/
<T,U> boolean `instanceof`(T value, Class<U>) =
  inline nice.lang.inline.Instanceof();
