/// COMMENT Implementation of an abstract interface by an existing class.

/// PASS
  /// Toplevel
  abstract interface I {}
  class java.lang.Object implements I;

/// PASS
  /// package a
  /// Toplevel
  abstract interface I {}
  class java.lang.Object implements I;
  /// package b import a
  true;

/// FAIL
  /// package a
  /// Toplevel
  abstract interface I {}
  /// package b
  /// Toplevel
  class java.lang.Object implements a.I;

/// FAIL
  /// package a
  /// Toplevel
  abstract interface I {}
  /// package b import a
  /// Toplevel
  class java.lang.Object implements I;


/// FAIL
  /// Toplevel
  abstract interface I { void f(); }
  class java.lang.Object implements I;

/// PASS
  f(new Object());
  /// Toplevel
  abstract interface I { void f(); }
  class java.lang.Object implements I;
  f(x@Object) {}

/// PASS
  /// Toplevel

  abstract interface I {
    alike f();
  }
  class java.io.File finally implements I;
  f(f@java.io.File) = new java.io.File("foo");

/// FAIL
  /// Toplevel

  abstract interface I {
    alike f();
  }
  class java.io.File implements I;
  f(f@java.io.File) = new java.io.File("foo");

/// PASS
  /// Toplevel
  abstract interface AI {}
  interface java.io.FileFilter implements AI;

/// FAIL
  /// Toplevel
  abstract interface AI {}
  class java.io.FileFilter implements AI;

/// FAIL
  /// Toplevel
  abstract interface AI {}
  interface java.lang.Object implements AI;
