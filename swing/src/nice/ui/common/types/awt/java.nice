package nice.ui.common.types.awt;

//JDK1.4   all imports for this package 
//JDK1.4   are defined in this file

import java.io.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.dnd.*;
import java.awt.font.*;
import java.awt.geom.*;
import java.awt.datatransfer.*;
import java.awt.image.*;
import java.beans.*;
import java.beans.beancontext.*;
import javax.accessibility.*;
import java.text.*;

//JDK1.4   Indications to the compiler 
//JDK1.4   about the precise types of some Swing features.
//JDK1.4   The colors are not null:

Color black() = native Color.black;
Color blue() = native Color.blue;
Color cyan() = native Color.cyan;
Color darkGray() = native Color.darkGray;
Color gray() = native Color.gray;
Color green() = native Color.green;
Color lightGray() = native Color.lightGray;
Color magenta() = native Color.magenta;
Color orange() = native Color.orange;
Color pink() = native Color.pink;
Color red() = native Color.red;
Color white() = native Color.white;
Color yellow() = native Color.yellow;

Color BLACK() = native Color.black;
Color BLUE() = native Color.blue;
Color CYAN() = native Color.cyan;
Color DARK_GRAY() = native Color.darkGray;
Color GRAY() = native Color.gray;
Color GREEN() = native Color.green;
Color LIGHT_GRAY() = native Color.lightGray;
Color MAGENTA() = native Color.magenta;
Color ORANGE() = native Color.orange;
Color PINK() = native Color.pink;
Color RED() = native Color.red;
Color WHITE() = native Color.white;
Color YELLOW() = native Color.yellow;


/**
 * EVENT INTERFACE SECTION
 */

// interface ActionListener
void actionPerformed(ActionListener, ActionEvent)
  = native void ActionListener.actionPerformed(ActionEvent);

// interface AdjustmentListener
void adjustmentValueChanged(AdjustmentListener, AdjustmentEvent)
  = native void AdjustmentListener.adjustmentValueChanged(AdjustmentEvent);

// interface AWTEventListener
void eventDispatched(AWTEventListener, AWTEvent)
  = native void AWTEventListener.eventDispatched(AWTEvent);

// interface ComponentListener
void componentHidden(ComponentListener, ComponentEvent)
  = native void ComponentListener.componentHidden(ComponentEvent);
void componentMoved(ComponentListener, ComponentEvent)
  = native void ComponentListener.componentMoved(ComponentEvent);
void componentShown(ComponentListener, ComponentEvent)
  = native void ComponentListener.componentShown(ComponentEvent);
void componentResized(ComponentListener, ComponentEvent)
  = native void ComponentListener.componentResized(ComponentEvent);

// interface ContainerListener
void componentAdded(ContainerListener, ContainerEvent)
  = native void ContainerListener.componentAdded(ContainerEvent);
void componentRemoved(ContainerListener, ContainerEvent)
  = native void ContainerListener.componentRemoved(ContainerEvent);

// interface FocusListener
void focusGained(FocusListener, FocusEvent)
  = native void FocusListener.focusGained(FocusEvent);
void focusLost(FocusListener, FocusEvent)
  = native void FocusListener.focusLost(FocusEvent);

// interface HierarchyBoundsListener
void ancestorMoved(HierarchyBoundsListener, HierarchyEvent)
  = native void HierarchyBoundsListener.ancestorMoved(HierarchyEvent);
void ancestorResized(HierarchyBoundsListener, HierarchyEvent)
  = native void HierarchyBoundsListener.ancestorResized(HierarchyEvent);

// interface HierarchyListener
void hierarchyChanged(HierarchyListener, HierarchyEvent)
  = native void HierarchyListener.hierarchyChanged(HierarchyEvent);

// interface InputMethodListener
void caretPositionChanged(InputMethodListener, InputMethodEvent)
  = native void InputMethodListener.caretPositionChanged(InputMethodEvent);
void inputMethodTextChanged(InputMethodListener, InputMethodEvent)
  = native void InputMethodListener.inputMethodTextChanged(InputMethodEvent);

// interface ItemListener
void itemStateChanged(ItemListener, ItemEvent)
  = native void ItemListener.itemStateChanged(ItemEvent);

// interface KeyListener
void keyPressed(KeyListener, KeyEvent)
  = native void KeyListener.keyPressed(KeyEvent);
void keyReleased(KeyListener, KeyEvent)
  = native void KeyListener.keyReleased(KeyEvent);
void keyTyped(KeyListener, KeyEvent)
  = native void KeyListener.keyTyped(KeyEvent);

// interface MouseListener
void mouseClicked(MouseListener, MouseEvent)
  = native void MouseListener.mouseClicked(MouseEvent);
void mouseEntered(MouseListener, MouseEvent)
  = native void MouseListener.mouseEntered(MouseEvent);
void mouseExited(MouseListener, MouseEvent)
  = native void MouseListener.mouseExited(MouseEvent);
void mousePressed(MouseListener, MouseEvent)
  = native void MouseListener.mousePressed(MouseEvent);
void mouseReleased(MouseListener, MouseEvent)
  = native void MouseListener.mouseReleased(MouseEvent);

// interface MouseMotionListener
void mouseDragged(MouseMotionListener, MouseEvent)
  = native void MouseMotionListener.mouseDragged(MouseEvent);
void mouseMoved(MouseMotionListener, MouseEvent)
  = native void MouseMotionListener.mouseMoved(MouseEvent);


// interface TextListener
void textValueChanged(TextListener, TextEvent)
  = native void TextListener.textValueChanged(TextEvent);

// interface WindowListener
void windowActivated(WindowListener, WindowEvent)
  = native void WindowListener.windowActivated(WindowEvent);
void windowClosed(WindowListener, WindowEvent)
  = native void WindowListener.windowClosed(WindowEvent);
void windowClosing(WindowListener, WindowEvent)
  = native void WindowListener.windowClosing(WindowEvent);
void windowDeactivated(WindowListener, WindowEvent)
  = native void WindowListener.windowDeactivated(WindowEvent);
void windowDeiconified(WindowListener, WindowEvent)
  = native void WindowListener.windowDeiconified(WindowEvent);
void windowIconified(WindowListener, WindowEvent)
  = native void WindowListener.windowIconified(WindowEvent);
void windowOpened(WindowListener, WindowEvent)
  = native void WindowListener.windowOpened(WindowEvent);

//JDK1.4  // interface WindowStateListener
//JDK1.4  void windowStateChanged(WindowStateListener, WindowEvent)
//JDK1.4    = native void WindowStateListener.windowStateChanged(WindowEvent);

//JDK1.4  // interface WindowFocusListener
//JDK1.4  void windowGainedFocus(WindowFocusListener, WindowEvent)
//JDK1.4    = native void WindowFocusListener.windowGainedFocus(WindowEvent);
//JDK1.4  void windowLostFocus(WindowFocusListener, WindowEvent)
//JDK1.4    = native void WindowFocusListener.windowLostFocus(WindowEvent);

// interface DragGestureListener
void dragGestureRecognized(DragGestureListener, DragGestureEvent)
  = native void DragGestureListener.dragGestureRecognized(DragGestureEvent);

// interface DragSourceListener
void dragDropEnd(DragSourceListener, DragSourceDropEvent)
  = native void DragSourceListener.dragDropEnd(DragSourceDropEvent);
void dragEnter(DragSourceListener, DragSourceDragEvent)
  = native void DragSourceListener.dragEnter(DragSourceDragEvent);
void dragExit(DragSourceListener, DragSourceEvent)
  = native void DragSourceListener.dragExit(DragSourceEvent);
void dragOver(DragSourceListener, DragSourceDragEvent)
  = native void DragSourceListener.dragOver(DragSourceDragEvent);
void dropActionChanged(DragSourceListener, DragSourceDragEvent)
  = native void DragSourceListener.dropActionChanged(DragSourceDragEvent);

// interface DropTargetListener
void dragEnter(DropTargetListener, DropTargetDragEvent)
  = native void DropTargetListener.dragEnter(DropTargetDragEvent);
void dragExit(DropTargetListener, DropTargetEvent)
  = native void DropTargetListener.dragExit(DropTargetEvent);
void dragOver(DropTargetListener, DropTargetDragEvent)
  = native void DropTargetListener.dragOver(DropTargetDragEvent);
void drop(DropTargetListener, DropTargetDropEvent)
  = native void DropTargetListener.drop(DropTargetDropEvent);
void dropActionChanged(DropTargetListener, DropTargetDragEvent)
  = native void DropTargetListener.dropActionChanged(DropTargetDragEvent);

//JDK1.4  // interface DragSourceMotionListener
//JDK1.4  void dragMouseMoved(DragSourceMotionListener, DragSourceDragEvent)
//JDK1.4    = native void DragSourceMotionListener.dragMouseMoved(DragSourceDragEvent);



/**
 * INTERFACES SECTION
 */

// interface Composite
<Any Key, Any Element> CompositeContext createContext(Composite, ColorModel, ColorModel, RenderingHints<Key,Element>) 
  = native CompositeContext Composite.createContext(ColorModel, ColorModel, RenderingHints) ;

// interface LayoutManager
Dimension minimumLayoutSize(LayoutManager, Container)
  = native Dimension LayoutManager.minimumLayoutSize(Container);
Dimension preferredLayoutSize(LayoutManager, Container)
  = native Dimension LayoutManager.preferredLayoutSize(Container);

// interface LayoutManager2
Dimension maximumLayoutSize(LayoutManager2, Container)
  = native Dimension LayoutManager2.maximumLayoutSize(Container);

// interface MenuContainer
Font getFont(MenuContainer)
  = native Font MenuContainer.getFont();

// interface Paint
<Any Key, Element> PaintContext createContext(Paint, ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints<Key,Element>) 
  = native PaintContext Paint.createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints);

// interface PaintContext
ColorModel getColorModel(PaintContext)
  = native ColorModel PaintContext.getColorModel();
Raster getRaster(PaintContext, int, int, int, int) 
  = native Raster PaintContext.getRaster(int, int, int, int);

// interface PrintGraphics
PrintJob getPrintJob(PrintGraphics)
  = native PrintJob PrintGraphics.getPrintJob();

// interface Shape
Rectangle getBounds(Shape)
  = native Rectangle Shape.getBounds();
Rectangle2D getBounds2D(Shape)
  = native Rectangle2D Shape.getBounds2D();
PathIterator getPathIterator(Shape, AffineTransform) 
  = native PathIterator Shape.getPathIterator(AffineTransform);
PathIterator getPathIterator(Shape, AffineTransform, double)
  = native PathIterator Shape.getPathIterator(AffineTransform, double);

// interface Stroke
Shape createStrokedShape(Stroke, Shape)
  = native Shape Stroke.createStrokedShape(Shape);




// class AlphaComposite
// static methods
AlphaComposite getInstance(int) 
  = native AlphaComposite AlphaComposite.getInstance(int);
AlphaComposite getInstance(int, float) 
  = native AlphaComposite AlphaComposite.getInstance(int, float);
//  nonstatic methods
<Any Key, Any Element> CompositeContext createContext(AlphaComposite, ColorModel, ColorModel, RenderingHints<Key, Element>) 
  = native CompositeContext AlphaComposite.createContext(ColorModel, ColorModel, RenderingHints);

// class AWTEvent
String paramString(AWTEvent) 
  = native String AWTEvent.paramString(); 
String toString(AWTEvent) 
  = native String AWTEvent.toString();

// class AWTEventMulticaster
ActionListener add(ActionListener, ActionListener) 
  = native ActionListener AWTEventMulticaster.add(ActionListener, ActionListener);
AdjustmentListener add(AdjustmentListener, AdjustmentListener) 
  = native AdjustmentListener AWTEventMulticaster.add(AdjustmentListener, AdjustmentListener);
ComponentListener  add(ComponentListener , ComponentListener ) 
  = native ComponentListener  AWTEventMulticaster.add(ComponentListener , ComponentListener );
ContainerListener add(ContainerListener, ContainerListener) 
  = native ContainerListener AWTEventMulticaster.add(ContainerListener, ContainerListener);
FocusListener  add(FocusListener , FocusListener ) 
  = native FocusListener  AWTEventMulticaster.add(FocusListener , FocusListener );
HierarchyBoundsListener add(HierarchyBoundsListener, HierarchyBoundsListener) 
  = native HierarchyBoundsListener AWTEventMulticaster.add(HierarchyBoundsListener, HierarchyBoundsListener);
HierarchyListener  add(HierarchyListener , HierarchyListener ) 
  = native HierarchyListener  AWTEventMulticaster.add(HierarchyListener , HierarchyListener );
InputMethodListener  add(InputMethodListener , InputMethodListener ) 
  = native InputMethodListener  AWTEventMulticaster.add(InputMethodListener , InputMethodListener);
ItemListener add(ItemListener, ItemListener) 
  = native ItemListener AWTEventMulticaster.add(ItemListener, ItemListener);
KeyListener add(KeyListener, KeyListener) 
  = native KeyListener AWTEventMulticaster.add(KeyListener, KeyListener);
MouseListener add(MouseListener, MouseListener) 
  = native MouseListener AWTEventMulticaster.add(MouseListener, MouseListener);
MouseMotionListener add(MouseMotionListener, MouseMotionListener) 
  = native MouseMotionListener AWTEventMulticaster.add(MouseMotionListener, MouseMotionListener);
TextListener add(TextListener, TextListener) 
  = native TextListener AWTEventMulticaster.add(TextListener, TextListener);
WindowListener add(WindowListener, WindowListener) 
  = native WindowListener AWTEventMulticaster.add(WindowListener, WindowListener);
//JDK1.4  EventListener[] getListeners(EventListener, Class) 
//JDK1.4    = native EventListener[] AWTEventMulticaster.getListeners(EventListener, Class);
//JDK1.4  EventListener[] getListeners(java.awt.Component, Class) 
//JDK1.4    = native EventListener[] java.awt.Component.getListeners(Class);
//JDK1.4  MouseWheelListener add(MouseWheelListener, MouseWheelListener) 
//JDK1.4    = native MouseWheelListener AWTEventMulticaster.add(MouseWheelListener, MouseWheelListener);
//JDK1.4  WindowFocusListener  add(WindowFocusListener , WindowFocusListener) 
//JDK1.4    = native WindowFocusListener AWTEventMulticaster.add(WindowFocusListener, WindowFocusListener);
//JDK1.4  WindowStateListener add(WindowStateListener, WindowStateListener) 
//JDK1.4    = native WindowStateListener AWTEventMulticaster.add(WindowStateListener, WindowStateListener);

ActionListener remove(ActionListener, ActionListener) 
  = native ActionListener AWTEventMulticaster.remove(ActionListener, ActionListener);
AdjustmentListener remove(AdjustmentListener, AdjustmentListener) 
  = native AdjustmentListener AWTEventMulticaster.add(AdjustmentListener, AdjustmentListener);
ComponentListener  remove(ComponentListener , ComponentListener ) 
  = native ComponentListener  AWTEventMulticaster.add(ComponentListener , ComponentListener );
ContainerListener remove(ContainerListener, ContainerListener) 
  = native ContainerListener AWTEventMulticaster.add(ContainerListener, ContainerListener);
FocusListener  remove(FocusListener , FocusListener ) 
  = native FocusListener  AWTEventMulticaster.add(FocusListener , FocusListener );
HierarchyBoundsListener remove(HierarchyBoundsListener, HierarchyBoundsListener) 
  = native HierarchyBoundsListener AWTEventMulticaster.add(HierarchyBoundsListener, HierarchyBoundsListener);
HierarchyListener  remove(HierarchyListener , HierarchyListener ) 
  = native HierarchyListener  AWTEventMulticaster.add(HierarchyListener , HierarchyListener );
InputMethodListener  remove(InputMethodListener , InputMethodListener ) 
  = native InputMethodListener  AWTEventMulticaster.add(InputMethodListener , InputMethodListener);
ItemListener remove(ItemListener, ItemListener) 
  = native ItemListener AWTEventMulticaster.add(ItemListener, ItemListener);
KeyListener remove(KeyListener, KeyListener) 
  = native KeyListener AWTEventMulticaster.add(KeyListener, KeyListener);
MouseListener remove(MouseListener, MouseListener) 
  = native MouseListener AWTEventMulticaster.add(MouseListener, MouseListener);
MouseMotionListener remove(MouseMotionListener, MouseMotionListener) 
  = native MouseMotionListener AWTEventMulticaster.add(MouseMotionListener, MouseMotionListener);
TextListener remove(TextListener, TextListener) 
  = native TextListener AWTEventMulticaster.add(TextListener, TextListener);
WindowListener remove(WindowListener, WindowListener) 
  = native WindowListener AWTEventMulticaster.add(WindowListener, WindowListener);
//JDK1.4  MouseWheelListener remove(MouseWheelListener, MouseWheelListener) 
//JDK1.4    = native MouseWheelListener AWTEventMulticaster.add(MouseWheelListener, MouseWheelListener);
//JDK1.4  WindowFocusListener  remove(WindowFocusListener , WindowFocusListener) 
//JDK1.4    = native WindowFocusListener AWTEventMulticaster.add(WindowFocusListener, WindowFocusListener);
//JDK1.4  WindowStateListener remove(WindowStateListener, WindowStateListener) 
//JDK1.4    = native WindowStateListener AWTEventMulticaster.add(WindowStateListener, WindowStateListener);

//JDK1.4  //JDK1.4   class AWTKeyStroke
//JDK1.4  //JDK1.4   static methods
//JDK1.4  AWTKeyStroke getAWTKeyStroke(char) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStroke(char);
//JDK1.4  AWTKeyStroke getAWTKeyStroke(Character, int) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStroke(Character, int);
//JDK1.4  AWTKeyStroke getAWTKeyStroke(int, int) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStroke(int, int);
//JDK1.4  AWTKeyStroke getAWTKeyStroke(int, int, boolean) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStroke(int, int, boolean);
//JDK1.4  AWTKeyStroke getAWTKeyStroke(String) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStroke(String);
//JDK1.4  AWTKeyStroke getAWTKeyStrokeForEvent(KeyEvent) 
//JDK1.4    = native AWTKeyStroke AWTKeyStroke.getAWTKeyStrokeForEvent(KeyEvent);
//JDK1.4  //JDK1.4   nonstatic methods
//JDK1.4  String toString(AWTKeyStroke) 
//JDK1.4    = native String AWTKeyStroke.toString();

//JDK1.4   class AWTPermission


// class BasicStroke
Shape createStrokedShape(BasicStroke, Shape) 
  = native Shape BasicStroke.createStrokedShape(Shape);

//JDK1.4   class BorderLayout
//JDK1.4  Dimension maximumLayoutSize(BorderLayout, java.awt.Container) 
//JDK1.4    = native Dimension BorderLayout.maximumLayoutSize(java.awt.Container);
//JDK1.4  Dimension minimumLayoutSize(BorderLayout, java.awt.Container) 
//JDK1.4    = native Dimension BorderLayout.minimumLayoutSize(BorderLayout, java.awt.Container);
//JDK1.4  Dimension preferredLayoutSize(BorderLayout, java.awt.Container) 
//JDK1.4    = native Dimension BorderLayout.preferredLayoutSize(java.awt.Container);
String CENTER() = native BorderLayout.CENTER;
String toString(BorderLayout) 
  = native String BorderLayout.toString();

//JDK1.4  //JDK1.4   class BufferCapabilities
//JDK1.4  Object clone(BufferCapabilities) 
//JDK1.4    = native Object BufferCapabilities.clone();
//JDK1.4  ImageCapabilities getBackBufferCapabilities(BufferCapabilities) 
//JDK1.4    = native ImageCapabilities BufferCapabilities.getBackBufferCapabilities();
//JDK1.4  ImageCapabilities getFrontBufferCapabilities(BufferCapabilities) 
//JDK1.4    = native ImageCapabilities BufferCapabilities.getFrontBufferCapabilities();
//JDK1.4  
//JDK1.4  //JDK1.4   class BufferCapabilities.FlipContents
//JDK1.4  String toString(BufferCapabilities.FlipContents) 
//JDK1.4    = native String BufferCapabilities.FlipContents.toString();

// class Button
AccessibleContext getAccessibleContext(Button) 
  = native AccessibleContext Button.getAccessibleContext();
String getActionCommand(Button) 
  = native String Button.getActionCommand();
//JDK1.4  ActionListener[] getActionListeners(Button) 
//JDK1.4    = native ActionListener[] Button.getActionListeners();

// class Canvas
AccessibleContext getAccessibleContext(Canvas) 
  = native AccessibleContext Canvas.getAccessibleContext();
//JDK1.4  BufferStrategy getBufferStrategy(Canvas)
//JDK1.4    = native BufferStrategy Canvas.getBufferStrategy();

//JDK1.4  // class CardLayout
//JDK1.4  Dimension maximumLayoutSize(CardLayout, java.awt.Container) 
//JDK1.4    = native Dimension CardLayout.maximumLayoutSize(java.awt.Container);
//JDK1.4  Dimension minimumLayoutSize(CardLayout, java.awt.Container) 
//JDK1.4    = native Dimension CardLayout.minimumLayoutSize(java.awt.Container);
//JDK1.4  Dimension preferredLayoutSize(CardLayout, java.awt.Container) 
//JDK1.4    = native Dimension CardLayout.preferredLayoutSize(java.awt.Container);
String toString(CardLayout) 
  = native String CardLayout.toString();

// class Checkbox
AccessibleContext getAccessibleContext(Checkbox) 
  = native AccessibleContext Checkbox.getAccessibleContext();
//JDK1.4  ItemListener[] getItemListeners(Checkbox) 
//JDK1.4    = native ItemListener[] Checkbox.getItemListeners();
//JDK1.4  EventListener[] getListeners(Checkbox, Class) 
//JDK1.4    = native EventListener[] Checkbox.getListeners(Class);
Object[] getSelectedObjects(Checkbox)
  = native Object[] Checkbox.getSelectedObjects();

//JDK1.4   class CheckboxGroup


// class CheckboxMenuItem
AccessibleContext getAccessibleContext(CheckboxMenuItem) 
  = native AccessibleContext CheckboxMenuItem.getAccessibleContext();
//JDK1.4  ItemListener[] getItemListeners(CheckboxMenuItem) 
//JDK1.4    = native ItemListener[] CheckboxMenuItem.getItemListeners();
Object[] getSelectedObjects(CheckboxMenuItem) 
  = native Object[] CheckboxMenuItem.getSelectedObjects();
String paramString(CheckboxMenuItem)
  = native String CheckboxMenuItem.paramString();

// class Choice
AccessibleContext getAccessibleContext(Choice) 
  = native AccessibleContext Choice.getAccessibleContext();
//JDK1.4  ItemListener[] getItemListeners(Choice) 
//JDK1.4    = native ItemListener[] Choice.getItemListeners();
String getItem(Choice, int) 
  = native String Choice.getItem(int);
String getSelectedItem(Choice) 
  = native String Choice.getSelectedItem();
Object[] getSelectedObjects(Choice) 
  = native Object[] Choice.getSelectedObjects();

// class Component
Image createImage(Component, ImageProducer) 
  = native Image Component.createImage(ImageProducer);
Image createImage(Component, int, int) 
  = native Image Component.createImage(int, int);
AccessibleContext getAccessibleContext(Component) 
  = native AccessibleContext Component.getAccessibleContext();
Color getBackground(Component) 
  = native Color Component.getBackground();
Rectangle getBounds(Component) 
  = native Rectangle Component.getBounds();
Rectangle getBounds(Component, Rectangle) 
  = native Rectangle Component.getBounds(Rectangle);
ColorModel getColorModel(Component) 
  = native ColorModel Component.getColorModel();
//JDK1.4  ComponentListener[] getComponentListeners(Component) 
//JDK1.4    = native ComponentListener[] Component.getComponentListeners();
ComponentOrientation getComponentOrientation(Component)
  = native ComponentOrientation Component.getComponentOrientation();
Cursor getCursor(Component) 
  = native Cursor Component.getCursor();
DropTarget getDropTarget(Component) 
  = native DropTarget Component.getDropTarget();
//JDK1.4  Container getFocusCycleRootAncestor(Component) 
//JDK1.4    = native Container Component.getFocusCycleRootAncestor();
//JDK1.4  FocusListener[] getFocusListeners(Component) 
//JDK1.4    = native FocusListener[] Component.getFocusListeners();
//JDK1.4  Set getFocusTraversalKeys(Component, int) 
//JDK1.4    = native Set Component.getFocusTraversalKeys(int);
Font getFont(Component) 
  = native Font Component.getFont();
FontMetrics getFontMetrics(Component, Font) 
  = native FontMetrics Component.getFontMetrics(Font);
Color getForeground(Component) 
  = native Color Component.getForeground();
Graphics getGraphics(Component) 
  = native Graphics Component.getGraphics();
GraphicsConfiguration getGraphicsConfiguration(Component) 
  = native GraphicsConfiguration Component.getGraphicsConfiguration();
//JDK1.4  HierarchyBoundsListener[] getHierarchyBoundsListeners(Component) 
//JDK1.4    = native HierarchyBoundsListener[] Component.getHierarchyBoundsListeners();
//JDK1.4  HierarchyListener[] getHierarchyListeners(Component) 
//JDK1.4    = native HierarchyListener[] Component.getHierarchyListeners();
//JDK1.4  InputMethodListener[] getInputMethodListeners(Component) 
//JDK1.4    = native InputMethodListener[] Component.getInputMethodListeners();
//JDK1.4  KeyListener[] getKeyListeners(Component) 
//JDK1.4    = native KeyListener[] Component.getKeyListeners();
EventListener[?] getListeners(Component, Class) 
  = native EventListener[] Component.getListeners(Class);
Locale getLocale(Component) 
  = native Locale Component.getLocale();
Point getLocation(Component) 
  = native Point Component.getLocation();
Point getLocation(Component, Point) 
  = native Point Component.getLocation(Point);
Point getLocationOnScreen(Component) 
  = native Point Component.getLocationOnScreen();
Dimension getMaximumSize(Component) 
  = native Dimension Component.getMaximumSize();
Dimension getMinimumSize(Component) 
  = native Dimension Component.getMinimumSize();
//JDK1.4  MouseListener[] getMouseListeners(Component) 
//JDK1.4    = native MouseListener[] Component.getMouseListeners();
//JDK1.4  MouseMotionListener[] getMouseMotionListeners(Component) 
//JDK1.4    = native MouseMotionListener[] Component.getMouseMotionListeners();
//JDK1.4  MouseWheelListener[] getMouseWheelListeners(Component) 
//JDK1.4    = native MouseWheelListener[] Component.getMouseWheelListeners();
String getName(Component) 
  = native String Component.getName();
java.awt.Container getParent(Component) 
  = native java.awt.Container Component.getParent();
Dimension getPreferredSize(Component) 
  = native Dimension Component.getPreferredSize();
//JDK1.4  PropertyChangeListener[] getPropertyChangeListeners(Component) 
//JDK1.4    = native PropertyChangeListener[] Component.getPropertyChangeListeners();
//JDK1.4  PropertyChangeListener[] getPropertyChangeListeners(Component, String)
//JDK1.4    = native PropertyChangeListener[] Component.getPropertyChangeListeners(String);
Dimension getSize(Component) 
  = native Dimension Component.getSize();
Dimension getSize(Component, Dimension) 
  = native Dimension Component.getSize(Dimension);
Toolkit getToolkit(Component) 
  = native Toolkit Component.getToolkit();
Object getTreeLock(Component) 
  = native Object Component.getTreeLock();
Component locate(Component, int, int)   //JDK1.4   deprecated -> getComponentAt
  = native Component Component.locate(int, int);
Point location(Component) 
  = native Point Component.location();
String toString(Component) 
  = native String Component.toString();  

// class ComponentOrientation
// static methods
ComponentOrientation getOrientation(Locale)
  = native ComponentOrientation ComponentOrientation.getOrientation(Locale);
ComponentOrientation getOrientation(ResourceBundle)
  = native ComponentOrientation ComponentOrientation.getOrientation(ResourceBundle);

// class java.awt.Container
java.awt.Component add(java.awt.Container, Component)
  = native java.awt.Component java.awt.Container.add(Component);
java.awt.Component add(java.awt.Container, Component, int)
  = native java.awt.Component java.awt.Container.add(Component, int);
java.awt.Component add(java.awt.Container, String, Component)
  = native java.awt.Component java.awt.Container.add(String, Component);
java.awt.Component getComponent(java.awt.Container, int)
  = native java.awt.Component java.awt.Container.getComponent(int);
java.awt.Component[] getComponents(java.awt.Container)
  = native java.awt.Component[] java.awt.Container.getComponents();
//JDK1.4  ContainerListener[] getContainerListeners(java.awt.Container)
//JDK1.4    = native ContainerListener[] java.awt.Container.getContainerListeners();
//JDK1.4  Set getFocusTraversalKeys(java.awt.Container, int)
//JDK1.4    = native Set java.awt.Container.getFocusTraversalKeys(int);
Insets getInsets(java.awt.Container)
  = native Insets java.awt.Container.getInsets();
LayoutManager getLayout(java.awt.Container)
  = native LayoutManager java.awt.Container.getLayout();
Dimension getMaximumSize(java.awt.Container)
  = native Dimension java.awt.Container.getMaximumSize();
Dimension getMinimumSize(java.awt.Container)
  = native Dimension java.awt.Container.getMinimumSize();
Dimension getPreferredSize(java.awt.Container)
  = native Dimension java.awt.Container.getPreferredSize();
Insets insets(java.awt.Container)   //JDK1.4   deprecated
  = native Insets java.awt.Container.insets();
Dimension minimumSize(java.awt.Container)   //JDK1.4   deprecated
  = native Dimension java.awt.Container.minimumSize();
Dimension preferredSize(java.awt.Container) //JDK1.4   deprecated
  = native Dimension java.awt.Container.preferredSize();


// class Cursor
// static methods
Cursor getDefaultCursor()
  = native Cursor Cursor.getDefaultCursor();
Cursor getPredefinedCursor(int)
  = native Cursor Cursor.getPredefinedCursor(int);
Cursor getSystemCustomCursor(String)
  = native Cursor Cursor.getSystemCustomCursor(String);
//JDK1.4   nonstatic methods
String toString(Cursor)
  = native String Cursor.toString();


// class Dialog
AccessibleContext getAccessibleContext(Dialog)
  = native AccessibleContext Dialog.getAccessibleContext();


// class Dimension
Dimension getSize(Dimension)
  = native Dimension Dimension.getSize();


// class Event
String toString(Event)   //JDK1.4   OBSOLETE
  = native String Event.toString();


// class EventQueue
AWTEvent getNextEvent(EventQueue)
  = native AWTEvent EventQueue.getNextEvent();
AWTEvent peekEvent(EventQueue)
  = native AWTEvent EventQueue.peekEvent();


// class FileDialog
FilenameFilter getFilenameFilter(FileDialog)
  = native FilenameFilter FileDialog.getFilenameFilter();


// class FlowLayout
Dimension minimumLayoutSize(FlowLayout, java.awt.Container)
  = native Dimension FlowLayout.minimumLayoutSize(java.awt.Container);
Dimension preferredLayoutSize(FlowLayout, java.awt.Container)
  = native Dimension FlowLayout.preferredLayoutSize(java.awt.Container);
String toString(FlowLayout)
  = native String FlowLayout.toString();


// class Font
// static methods
Font createFont(int, InputStream)
  = native Font Font.createFont(int, InputStream);
Font decode(String)
  = native Font Font.decode(String);
<Any Key, Any Element> Font getFont(Map<Key,Element>)
  = native Font Font.getFont(Map);
Font getFont(String, Font)
  = native Font Font.getFont(String, Font);
Font getFont(String)
  = native Font Font.getFont(String);
// nonstatic methods
GlyphVector createGlyphVector(Font, FontRenderContext, char[])
  = native GlyphVector Font.createGlyphVector(FontRenderContext, char[]);
GlyphVector createGlyphVector(Font, FontRenderContext, CharacterIterator)
  = native GlyphVector Font.createGlyphVector(FontRenderContext, CharacterIterator);
GlyphVector createGlyphVector(Font, FontRenderContext, int[])
  = native GlyphVector Font.createGlyphVector(FontRenderContext, int[]);
GlyphVector createGlyphVector(Font, FontRenderContext, String)
  = native GlyphVector Font.createGlyphVector(FontRenderContext, String);
Font deriveFont(Font, AffineTransform)
  = native Font Font.deriveFont(AffineTransform);
Font deriveFont(Font, float)
  = native Font Font.deriveFont(float);
Font deriveFont(Font, int)
  = native Font Font.deriveFont(int);
Font deriveFont(Font, int, AffineTransform)
  = native Font Font.deriveFont(int, AffineTransform);
Font deriveFont(Font, int, float)
  = native Font Font.deriveFont(int, float);
<Any Key, Any Element> Font deriveFont(Font, Map<Key,Element>)
  = native Font Font.deriveFont(Map);
<Any Key, Any Element> Map<Key,Element> getAttributes(Font)
  = native Map Font.getAttributes();
//JDK1.4  AttributedCharacterIterator.Attribute[] getAvailableAttributes(Font)
//JDK1.4    = native AttributedCharacterIterator.Attribute[] Font.getAvailableAttributes();
String getFamily(Font)
  = native String Font.getFamily();
String getFamily(Font, Locale)
  = native String Font.getFamily(Locale);
String getFontName(Font)
  = native String Font.getFontName();
String getFontName(Font, Locale)
  = native String Font.getFontName(Locale);
LineMetrics getLineMetrics(Font, char[], int, int, FontRenderContext)
  = native LineMetrics Font.getLineMetrics(char[], int, int, FontRenderContext);
LineMetrics getLineMetrics(Font, CharacterIterator, int, int, FontRenderContext)
  = native LineMetrics Font.getLineMetrics(CharacterIterator, int, int, FontRenderContext);
LineMetrics getLineMetrics(Font, String, FontRenderContext)
  = native LineMetrics Font.getLineMetrics(String, FontRenderContext);
LineMetrics getLineMetrics(Font, String, int, int, FontRenderContext)
  = native LineMetrics Font.getLineMetrics(String, int, int, FontRenderContext);
Rectangle2D getMaxCharBounds(Font, FontRenderContext)
  = native Rectangle2D Font.getMaxCharBounds(FontRenderContext);
String getName(Font)
  = native String Font.getName();
String getPSName(Font)
  = native String Font.getPSName();
Rectangle2D getStringBounds(Font, char[], int, int, FontRenderContext)
  = native Rectangle2D Font.getStringBounds(char[], int, int, FontRenderContext);
Rectangle2D getStringBounds(Font, CharacterIterator, int, int, FontRenderContext)
  = native Rectangle2D Font.getStringBounds(CharacterIterator, int, int, FontRenderContext);
Rectangle2D getStringBounds(Font, String, FontRenderContext)
  = native Rectangle2D Font.getStringBounds(String, FontRenderContext);
Rectangle2D getStringBounds(Font, String, int, int, FontRenderContext)
  = native Rectangle2D Font.getStringBounds(String, int, int, FontRenderContext);
AffineTransform getTransform(Font)
  = native AffineTransform Font.getTransform();
//JDK1.4  GlyphVector layoutGlyphVector(Font, FontRenderContext, char[], int, int, int)
//JDK1.4    = native GlyphVector Font.layoutGlyphVector(FontRenderContext, char[], int, int, int);
String toString(Font)
  = native String Font.toString();


// class FontMetrics
LineMetrics getLineMetrics(FontMetrics,char[], int, int, Graphics)
  = native LineMetrics FontMetrics.getLineMetrics(char[], int, int, Graphics);
LineMetrics getLineMetrics(FontMetrics, CharacterIterator, int, int, Graphics)
  = native LineMetrics FontMetrics.getLineMetrics(CharacterIterator, int, int, Graphics);
LineMetrics getLineMetrics(FontMetrics, String, Graphics)
  = native LineMetrics FontMetrics.getLineMetrics(String, Graphics);
LineMetrics getLineMetrics(FontMetrics, String, int, int, Graphics)
  = native LineMetrics FontMetrics.getLineMetrics(String, int, int, Graphics);
Rectangle2D getMaxCharBounds(FontMetrics, Graphics)
  = native Rectangle2D FontMetrics.getMaxCharBounds(Graphics);
Rectangle2D getStringBounds(FontMetrics, char[], int, int, Graphics)
  = native Rectangle2D FontMetrics.getStringBounds(char[], int, int, Graphics);
Rectangle2D getStringBounds(FontMetrics, CharacterIterator, int, int, Graphics)
  = native Rectangle2D FontMetrics.getStringBounds(CharacterIterator, int, int, Graphics);
Rectangle2D getStringBounds(FontMetrics, String, Graphics)
  = native Rectangle2D FontMetrics.getStringBounds(String, Graphics);
Rectangle2D getStringBounds(FontMetrics, String, int, int, Graphics)
  = native Rectangle2D FontMetrics.getStringBounds(String, int, int, Graphics);
String toString(FontMetrics)
  = native String FontMetrics.toString();


// class Frame
// static methods
Frame[] getFrames()
  = native Frame[] Frame.getFrames();
// nonstatic methods
AccessibleContext getAccessibleContext(Frame)
  = native AccessibleContext Frame.getAccessibleContext();
String getTitle(Frame)
  = native String Frame.getTitle();


// class GradientPaint
<Any Key, Any Element> PaintContext createContext(GradientPaint, ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints<Key,Element>)
  = native PaintContext GradientPaint.createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints);
Color getColor1(GradientPaint)
  = native Color GradientPaint.getColor1();
Color getColor2(GradientPaint)
  = native Color GradientPaint.getColor2();
Point2D getPoint1(GradientPaint)
  = native Point2D GradientPaint.getPoint1();
Point2D getPoint2(GradientPaint)
  = native Point2D GradientPaint.getPoint2();


// class Graphics
Graphics create(Graphics)
  = native Graphics Graphics.create();
Graphics create(Graphics, int, int, int, int)
  = native Graphics Graphics.create(int, int, int, int);
Color getColor(Graphics)
  = native Color Graphics.getColor();
Font getFont(Graphics)
  = native Font Graphics.getFont();
FontMetrics getFontMetrics(Graphics)
  = native FontMetrics Graphics.getFontMetrics();
FontMetrics getFontMetrics(Graphics, Font)
  = native FontMetrics Graphics.getFontMetrics(Font);


// class Graphics2D
Color getBackground(Graphics2D) =
  native Color Graphics2D.getBackground();
Composite getComposite(Graphics2D) =
  native Composite Graphics2D.getComposite();
GraphicsConfiguration getDeviceConfiguration(Graphics2D) =
  native GraphicsConfiguration Graphics2D.getDeviceConfiguration();
FontRenderContext getFontRenderContext(Graphics2D) =
  native FontRenderContext Graphics2D.getFontRenderContext();
Paint getPaint(Graphics2D) =
  native Paint Graphics2D.getPaint();
//JDK1.4  Object getRenderingHint(Graphics2D, java.awt.Key) =
//JDK1.4    native Object Graphics2D.getRenderingHint(java.awt.Key);
<Any Key, Any Element> RenderingHints<Key,Element> getRenderingHints(Graphics2D) =
  native RenderingHints Graphics2D.getRenderingHints();
Stroke getStroke(Graphics2D) =
  native Stroke Graphics2D.getStroke();
AffineTransform getTransform(Graphics2D) =
  native AffineTransform Graphics2D.getTransform();


// class GraphicsConfigTemplate
GraphicsConfiguration getBestConfiguration(GraphicsConfigTemplate, GraphicsConfiguration[]) =
  native GraphicsConfiguration GraphicsConfigTemplate.getBestConfiguration(GraphicsConfiguration[]);


// class GraphicsConfiguration
BufferedImage createCompatibleImage(GraphicsConfiguration, int, int)
  = native BufferedImage GraphicsConfiguration.createCompatibleImage(int, int);
BufferedImage createCompatibleImage(GraphicsConfiguration, int, int, int)
  = native BufferedImage GraphicsConfiguration.createCompatibleImage(int, int, int);
//JDK1.4  VolatileImage createCompatibleVolatileImage(GraphicsConfiguration, int, int)
//JDK1.4    = native VolatileImage GraphicsConfiguration.createCompatibleVolatileImage(int, int);
//JDK1.4  VolatileImage createCompatibleVolatileImage(GraphicsConfiguration, int, int, ImageCapabilities)
//JDK1.4    = native VolatileImage GraphicsConfiguration.createCompatibleVolatileImage(int, int, ImageCapabilities);
Rectangle getBounds(GraphicsConfiguration)
  = native Rectangle GraphicsConfiguration.getBounds();
//JDK1.4  BufferCapabilities getBufferCapabilities(GraphicsConfiguration)
//JDK1.4    = native BufferCapabilities GraphicsConfiguration.getBufferCapabilities();
ColorModel getColorModel(GraphicsConfiguration)
  = native ColorModel GraphicsConfiguration.getColorModel();
ColorModel getColorModel(GraphicsConfiguration, int)
  = native ColorModel GraphicsConfiguration.getColorModel(int);
AffineTransform getDefaultTransform(GraphicsConfiguration)
  = native AffineTransform GraphicsConfiguration.getDefaultTransform();
GraphicsDevice getDevice(GraphicsConfiguration)
  = native GraphicsDevice GraphicsConfiguration.getDevice();
//JDK1.4  ImageCapabilities getImageCapabilities(GraphicsConfiguration)
//JDK1.4    = native ImageCapabilities GraphicsConfiguration.getImageCapabilities();
AffineTransform getNormalizingTransform(GraphicsConfiguration)
  = native AffineTransform GraphicsConfiguration.getNormalizingTransform();

// java.awt.GraphicsDevice
GraphicsConfiguration getBestConfiguration(GraphicsDevice, GraphicsConfigTemplate)
  = native GraphicsConfiguration GraphicsDevice.getBestConfiguration(GraphicsConfigTemplate);
GraphicsConfiguration[] getConfigurations(GraphicsDevice)
  = native GraphicsConfiguration[] GraphicsDevice.getConfigurations();
GraphicsConfiguration getDefaultConfiguration(GraphicsDevice)
  = native GraphicsConfiguration GraphicsDevice.getDefaultConfiguration();
//JDK1.4  DisplayMode getDisplayMode(GraphicsDevice)
//JDK1.4    = native DisplayMode GraphicsDevice.getDisplayMode();
//JDK1.4  DisplayMode[] getDisplayModes(GraphicsDevice)
//JDK1.4    = native DisplayMode[] GraphicsDevice.getDisplayModes();
//JDK1.4  Window getFullScreenWindow(GraphicsDevice)
//JDK1.4    = native Window GraphicsDevice.getFullScreenWindow();
String getIDstring(GraphicsDevice)
  = native String GraphicsDevice.getIDstring();


// java.awt.GraphicsEnvironment
Graphics2D createGraphics(GraphicsEnvironment, BufferedImage)
  = native Graphics2D GraphicsEnvironment.createGraphics(BufferedImage);
Font[] getAllFonts(GraphicsEnvironment)
  = native Font[] GraphicsEnvironment.getAllFonts();
String[] getAvailableFontFamilyNames(GraphicsEnvironment)
  = native String[] GraphicsEnvironment.getAvailableFontFamilyNames();
String[] getAvailableFontFamilyNames(GraphicsEnvironment, Locale)
  = native String[] GraphicsEnvironment.getAvailableFontFamilyNames(Locale);
//JDK1.4  Point getCenterPoint(GraphicsEnvironment)
//JDK1.4    = native Point GraphicsEnvironment.getCenterPoint();
GraphicsDevice getDefaultScreenDevice(GraphicsEnvironment)
  = native GraphicsDevice GraphicsEnvironment.getDefaultScreenDevice();
GraphicsEnvironment getLocalGraphicsEnvironment()
  = native GraphicsEnvironment GraphicsEnvironment.getLocalGraphicsEnvironment();
//JDK1.4  Rectangle getMaximumWindowBounds(GraphicsEnvironment)
//JDK1.4    = native Rectangle GraphicsEnvironment.getMaximumWindowBounds();
GraphicsDevice[] getScreenDevices(GraphicsEnvironment)
  = native GraphicsDevice[] GraphicsEnvironment.getScreenDevices();

// java.awt.GridBagLayout
GridBagConstraints getConstraints(GridBagLayout, Component)
  = native GridBagConstraints GridBagLayout.getConstraints(Component);
Point getLayoutOrigin(GridBagLayout)
  = native Point GridBagLayout.getLayoutOrigin();
Point location(GridBagLayout, int, int)
  = native Point GridBagLayout.location(int, int);
String toString(GridBagLayout)
  = native String GridBagLayout.toString();

// java.awt.GridLayout
String toString(GridLayout)
  = native String GridLayout.toString();

// java.awt.Image
Graphics getGraphics(Image)
  = native Graphics Image.getGraphics();
Image getScaledInstance(Image, int, int, int)
  = native Image Image.getScaledInstance(int, int, int);
ImageProducer getSource(Image)
  = native ImageProducer Image.getSource();


// java.awt.MenuItem
EventListener[?] getListeners(MenuItem, Class)
  = native EventListener[] MenuItem.getListeners(Class);