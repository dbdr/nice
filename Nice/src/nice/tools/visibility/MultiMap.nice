/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2005                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package nice.tools.visibility;

/**
   Mapping keys to lists of values.

   @author Daniel Bonniot (bonniot@users.sf.net)
 */

class MultiMap<K,V>
{
  void add(K key, V value)
  {
    ?List<V> values = map[key];

    if (values == null)
      {
	values = new LinkedList();
	map[key] = notNull(values);
      }

    // We could as well add at the end.
    // Temporarily, we add at the begining to match the previous implementation
    // so as not to cause random changes due to known bugs.
    notNull(values).add(0, value);
  }

  void remove(K key, V value)
  {
    ?List<V> values = map[key];

    if (values == null)
      return;

    values.remove(value);
  }

  ?List<V> get(K key) = map[key];

  private HashMap<K,List<V>> map = new HashMap();
}
