/// PASS
  String s = "ABC";
  Object o = s;
  //if (o instanceof String)
    //s = o;

  List<Object> l = new LinkedList();
  l.add(s);
  l.add(new java.io.File("."));

  boolean b = o == s;
  b = s == o;

/// FAIL
  /// Toplevel
<U,T> T foo(T x, Object o) {
  /*/// FAIL HERE*/ x = o;
  return x;
}

/// PASS
  /// Toplevel
<T> T pick(T x, T y) = x;

void foo(Object o, String s) {
  Object x = pick(o,s);
  x = pick(s,o);
}

/// FAIL
  /// Toplevel
<T> T pick(T x, T y) = x;

void foo(Object o, String s) {
  String /*/// FAIL HERE*/ x = pick(o,s);
}

/// FAIL
  /// Toplevel
<T> T pick(T x, T y) = x;

void foo(Object o, String s) {
  String /*/// FAIL HERE*/ x = pick(s,o);
}

/// PASS
  /// Toplevel
<T, U | U <: T> U pick(T x, U y) = y;

void foo(Object o) {
  ?int x = pick(o,null);
}

/// FAIL
  Object /* /// FAIL HERE */ o = null;

/// PASS
  ?Object o = null;

/// PASS
  Object[] os = [ "DEF", 42 ];
  foo(os);
  /// Toplevel
  void foo(Object[] os) {}

/// PASS
  use(["s"]);
  /// Toplevel
  void use(Object[]) {}

/// PASS
  ?Object[] o1 = new Object[1];
  Object[] o0 = new Object[0];

/// FAIL
  String s = foo("");
  /// Toplevel
  let Object o = 2;
  <T> T foo(T x) = x;
  foo(#String s) = /*/// FAIL HERE*/ o;

/// FAIL
  A<int> a = new A(x: 0);
  /*/// FAIL HERE */ foo(a, new A(x: new Object()));
  int x = a.x;
  /// Toplevel
class A<T> { T x; }
<T> void foo(A<T> a1, A<T> a2) { a1.x = a2.x; }

/// FAIL
  let (Object[], int->?Object)->void /*/// FAIL HERE */ f = foo;
  /// Toplevel
<T> void foo(List<T>,T) {}

/// FAIL
  let (?Object[], (int,int))->void /*/// FAIL HERE */ f = foo;
  /// Toplevel
<T> void foo(List<T>,T) {}
