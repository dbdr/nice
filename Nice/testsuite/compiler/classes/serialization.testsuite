/// global
import java.io.*;

<T> T serializeThenDeserialize(T obj)
{
  let outb = new ByteArrayOutputStream();
  let outs = new ObjectOutputStream(outb);
  outs.writeObject(obj);
  let store = outb.toByteArray();

  let inb = new ByteArrayInputStream(store);
  let ins = new ObjectInputStream(inb);
  return ins.readObject();
}

/// PASS
  A a = new A(x: 10);
  A b = serializeThenDeserialize(a);
  assert a.x == b.x;
  let osc = ObjectStreamClass.lookup(A.class);
  assert osc.getSerialVersionUID() == 123456789L;
  /// Toplevel
  import java.io.*;
  class A implements java.io.Serializable {
    final long serialVersionUID = +123456789L;
    int x;
  }

/// PASS
  A a = new A(x: 10);
  A b = serializeThenDeserialize(a);
  assert a.x == b.x;
  let osc = ObjectStreamClass.lookup(A.class);
  assert osc.getSerialVersionUID() == -123456789L;
  /// Toplevel
  import java.io.*;
  class A implements java.io.Serializable {
    final long serialVersionUID = -123456789L;
    int x;
  }
 
/// FAIL
  /// Toplevel
  class A implements java.io.Serializable {
    final long /* /// FAIL HERE */serialVersionUID = "xyz";
  }

/// PASS
  A a = serializeThenDeserialize(new A());
  assert a.ok;

  B b = serializeThenDeserialize(new B());
  assert b.ok;

  /// Toplevel
import java.io.*;

class A implements Serializable
{
  transient boolean ok = true;

  private void writeObject(ObjectOutputStream out) {
    out.writeBoolean(true);
  }

  private void readObject(ObjectInputStream in) {
    ok = in.readBoolean();
  }
}

class B implements Serializable
{
  transient boolean ok = true;

  private void writeObject(ObjectOutputStream out);
  private void readObject(ObjectInputStream in);
}

writeObject(this@B, out) {
  out.writeBoolean(true);
}

readObject(this@B, in) {
  ok = in.readBoolean();
}
