
/**************************************************************************/
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/


package nice.ui.common;


/**
 * methods to safely convert java listeners to their nice pendants
 * raises a NoNiceListenerException if this is not possible
 */

NicePropertyChangeListener toNicePropertyChangeListener(EventListener);
toNicePropertyChangeListener(this@NicePropertyChangeListener) = this;
toNicePropertyChangeListener(this) 
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NicePropertyChangeListener", listener: this); 
}

NiceVetoableChangeListener toNiceVetoableChangeListener(EventListener);
toNiceVetoableChangeListener(this@NiceVetoableChangeListener) = this;
toNiceVetoableChangeListener(this) 
{ 
  throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceVetoableChangeListener", listener: this);
}

//JDK1.4  NiceExceptionListener toNiceExceptionListener(EventListener);
//JDK1.4  toNiceExceptionListener(this@NiceExceptionListener) = this;
//JDK1.4  toNiceExceptionListener(this)
//JDK1.4  { 
//JDK1.4    throw new NoNiceListenerException("" + this.getClass().getName() + "is no instance of NiceExceptionListener", listener: this);
//JDK1.4  }
