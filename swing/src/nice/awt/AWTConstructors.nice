package nice.awt;

import java.awt.*;
import java.awt.dnd.*;
import java.awt.event.*;
import java.awt.datatransfer.*;


// --------------------------------------------------------------------------------------------------

Button Button(?String text = null, 
              
              ActionEvent ?-> void actionPerformed = null,
                   
//            optional anonymous functions from java.awt.Component

              ?String propertyName = null,
              ComponentEvent ?-> void componentHidden = null,
              ComponentEvent ?-> void componentMoved = null,
              ComponentEvent ?-> void componentResized = null,
              ComponentEvent ?-> void componentShown = null,
              FocusEvent ?-> void focusGained = null,
              FocusEvent ?-> void focusLost = null,
              HierarchyEvent ?-> void hierarchyAncestorMoved = null,
              HierarchyEvent ?-> void hierarchyAncestorResized = null,
              HierarchyEvent ?-> void hierarchyChanged = null,
              InputMethodEvent ?-> void caretPositionChanged = null,
              InputMethodEvent ?-> void inputMethodTextChanged = null,
              KeyEvent ?-> void keyPressed = null,
              KeyEvent ?-> void keyReleased = null,
              KeyEvent ?-> void keyTyped = null, 
              MouseEvent ?-> void mouseClicked = null,
              MouseEvent ?-> void mouseEntered = null,
              MouseEvent ?-> void mouseExited = null,
              MouseEvent ?-> void mousePressed = null,
              MouseEvent ?-> void mouseReleased = null,   
              MouseEvent ?-> void mouseDragged = null,
              MouseEvent ?-> void mouseMoved = null,
              PropertyChangeEvent ?-> void propertyChange = null
//            MouseWheelEvent ?-> void mouseWheelMoved = null            
              )
{

  Button button;
  if(text != null) button = new Button(text);
  else button = new Button();
  
  button.addButtonListeners(actionPerformed: actionPerformed,
                            propertyName: propertyName,
                            componentHidden: componentHidden,
                            componentMoved: componentMoved,
                            componentResized: componentResized,
                            componentShown: componentShown,
                            focusGained: focusGained,
                            focusLost: focusLost,
                            hierarchyAncestorMoved: hierarchyAncestorMoved,
                            hierarchyAncestorResized: hierarchyAncestorResized,
                            hierarchyChanged: hierarchyChanged,
                            caretPositionChanged: caretPositionChanged,
                            inputMethodTextChanged: inputMethodTextChanged,
                            keyPressed: keyPressed,
                            keyReleased: keyReleased,
                            keyTyped: keyTyped, 
                            mouseEntered: mouseEntered,
                            mouseExited: mouseExited,
                            mousePressed: mousePressed,
                            mouseReleased: mouseReleased,   
                            mouseDragged: mouseDragged,
                            mouseMoved: mouseMoved,
                            propertyChange: propertyChange
//                          mouseWheelMoved: mouseWheelMoved 
                            );
  return button;
}



// --------------------------------------------------------------------------------------------------

Canvas Canvas(?java.awt.GraphicsConfiguration gc = null, 
                   
//            optional anonymous functions from java.awt.Component

              ?String propertyName = null,
              ComponentEvent ?-> void componentHidden = null,
              ComponentEvent ?-> void componentMoved = null,
              ComponentEvent ?-> void componentResized = null,
              ComponentEvent ?-> void componentShown = null,
              FocusEvent ?-> void focusGained = null,
              FocusEvent ?-> void focusLost = null,
              HierarchyEvent ?-> void hierarchyAncestorMoved = null,
              HierarchyEvent ?-> void hierarchyAncestorResized = null,
              HierarchyEvent ?-> void hierarchyChanged = null,
              InputMethodEvent ?-> void caretPositionChanged = null,
              InputMethodEvent ?-> void inputMethodTextChanged = null,
              KeyEvent ?-> void keyPressed = null,
              KeyEvent ?-> void keyReleased = null,
              KeyEvent ?-> void keyTyped = null, 
              MouseEvent ?-> void mouseClicked = null,
              MouseEvent ?-> void mouseEntered = null,
              MouseEvent ?-> void mouseExited = null,
              MouseEvent ?-> void mousePressed = null,
              MouseEvent ?-> void mouseReleased = null,   
              MouseEvent ?-> void mouseDragged = null,
              MouseEvent ?-> void mouseMoved = null,
              PropertyChangeEvent ?-> void propertyChange = null
//            MouseWheelEvent ?-> void mouseWheelMoved = null            
              )
{

  Canvas canvas;
  if(gc != null) canvas = new Canvas(gc);
  else canvas = new Canvas();
  
  canvas.addComponentListeners(propertyName: propertyName,
                               componentHidden: componentHidden,
                               componentMoved: componentMoved,
                               componentResized: componentResized,
                               componentShown: componentShown,
                               focusGained: focusGained,
                               focusLost: focusLost,
                               hierarchyAncestorMoved: hierarchyAncestorMoved,
                               hierarchyAncestorResized: hierarchyAncestorResized,
                               hierarchyChanged: hierarchyChanged,
                               caretPositionChanged: caretPositionChanged,
                               inputMethodTextChanged: inputMethodTextChanged,
                               keyPressed: keyPressed,
                               keyReleased: keyReleased,
                               keyTyped: keyTyped, 
                               mouseEntered: mouseEntered,
                               mouseExited: mouseExited,
                               mousePressed: mousePressed,
                               mouseReleased: mouseReleased,   
                               mouseDragged: mouseDragged,
                               mouseMoved: mouseMoved,
                               propertyChange: propertyChange
//                             mouseWheelMoved: mouseWheelMoved 
                               );
  return canvas;
}



// --------------------------------------------------------------------------------------------------

Checkbox Checkbox(?String text = null,
                  ?java.awt.CheckboxGroup group = null,
                  boolean selected = false, 
              
                  ItemEvent ?-> void itemStateChanged = null,
                   
//                optional anonymous functions from java.awt.Component
    
                  ?String propertyName = null,
                  ComponentEvent ?-> void componentHidden = null,
                  ComponentEvent ?-> void componentMoved = null,
                  ComponentEvent ?-> void componentResized = null,
                  ComponentEvent ?-> void componentShown = null,
                  FocusEvent ?-> void focusGained = null,
                  FocusEvent ?-> void focusLost = null,
                  HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                  HierarchyEvent ?-> void hierarchyAncestorResized = null,
                  HierarchyEvent ?-> void hierarchyChanged = null,
                  InputMethodEvent ?-> void caretPositionChanged = null,
                  InputMethodEvent ?-> void inputMethodTextChanged = null,
                  KeyEvent ?-> void keyPressed = null,
                  KeyEvent ?-> void keyReleased = null,
                  KeyEvent ?-> void keyTyped = null, 
                  MouseEvent ?-> void mouseClicked = null,
                  MouseEvent ?-> void mouseEntered = null,
                  MouseEvent ?-> void mouseExited = null,
                  MouseEvent ?-> void mousePressed = null,
                  MouseEvent ?-> void mouseReleased = null,   
                  MouseEvent ?-> void mouseDragged = null,
                  MouseEvent ?-> void mouseMoved = null,
                  PropertyChangeEvent ?-> void propertyChange = null
//                MouseWheelEvent ?-> void mouseWheelMoved = null            
                  )
{

  Checkbox checkbox = new Checkbox();
  if(text != null) checkbox.setLabel(text);
  if(group != null) checkbox.setCheckboxGroup(group);
  checkbox.setState(selected);
  
  checkbox.addCheckboxListeners(itemStateChanged: itemStateChanged,
                                propertyName: propertyName,
                                componentHidden: componentHidden,
                                componentMoved: componentMoved,
                                componentResized: componentResized,
                                componentShown: componentShown,
                                focusGained: focusGained,
                                focusLost: focusLost,
                                hierarchyAncestorMoved: hierarchyAncestorMoved,
                                hierarchyAncestorResized: hierarchyAncestorResized,
                                hierarchyChanged: hierarchyChanged,
                                caretPositionChanged: caretPositionChanged,
                                inputMethodTextChanged: inputMethodTextChanged,
                                keyPressed: keyPressed,
                                keyReleased: keyReleased,
                                keyTyped: keyTyped, 
                                mouseEntered: mouseEntered,
                                mouseExited: mouseExited,
                                mousePressed: mousePressed,
                                mouseReleased: mouseReleased,   
                                mouseDragged: mouseDragged,
                                mouseMoved: mouseMoved,
                                propertyChange: propertyChange
//                              mouseWheelMoved: mouseWheelMoved 
                                );
  return checkbox;
}



// --------------------------------------------------------------------------------------------------

CheckboxMenuItem CheckboxMenuItem(?String text = null,
                                  boolean selected = false, 
                              
                                  ItemEvent ?-> void itemStateChanged = null,
                                  
//                                optional anonymous functions from java.awt.MenuItem

                                  ActionEvent ?-> void actionPerformed = null
                                  )
{

  CheckboxMenuItem menuItem = new CheckboxMenuItem();
  if(text != null) menuItem.setLabel(text);
  menuItem.setState(selected);
  
  menuItem.addCheckboxMenuItemListeners(itemStateChanged: itemStateChanged,
                                        actionPerformed: actionPerformed
                                        );
  return menuItem;
}


// --------------------------------------------------------------------------------------------------

Choice Choice(ItemEvent ?-> void itemStateChanged = null,
                   
//            optional anonymous functions from java.awt.Component
    
              ?String propertyName = null,
              ComponentEvent ?-> void componentHidden = null,
              ComponentEvent ?-> void componentMoved = null,
              ComponentEvent ?-> void componentResized = null,
              ComponentEvent ?-> void componentShown = null,
              FocusEvent ?-> void focusGained = null,
              FocusEvent ?-> void focusLost = null,
              HierarchyEvent ?-> void hierarchyAncestorMoved = null,
              HierarchyEvent ?-> void hierarchyAncestorResized = null,
              HierarchyEvent ?-> void hierarchyChanged = null,
              InputMethodEvent ?-> void caretPositionChanged = null,
              InputMethodEvent ?-> void inputMethodTextChanged = null,
              KeyEvent ?-> void keyPressed = null,
              KeyEvent ?-> void keyReleased = null,
              KeyEvent ?-> void keyTyped = null, 
              MouseEvent ?-> void mouseClicked = null,
              MouseEvent ?-> void mouseEntered = null,
              MouseEvent ?-> void mouseExited = null,
              MouseEvent ?-> void mousePressed = null,
              MouseEvent ?-> void mouseReleased = null,   
              MouseEvent ?-> void mouseDragged = null,
              MouseEvent ?-> void mouseMoved = null,
              PropertyChangeEvent ?-> void propertyChange = null
//            MouseWheelEvent ?-> void mouseWheelMoved = null            
              )
{

  Choice choice = new Choice();
  
  choice.addChoiceListeners(itemStateChanged: itemStateChanged,
                            propertyName: propertyName,
                            componentHidden: componentHidden,
                            componentMoved: componentMoved,
                            componentResized: componentResized,
                            componentShown: componentShown,
                            focusGained: focusGained,
                            focusLost: focusLost,
                            hierarchyAncestorMoved: hierarchyAncestorMoved,
                            hierarchyAncestorResized: hierarchyAncestorResized,
                            hierarchyChanged: hierarchyChanged,
                            caretPositionChanged: caretPositionChanged,
                            inputMethodTextChanged: inputMethodTextChanged,
                            keyPressed: keyPressed,
                            keyReleased: keyReleased,
                            keyTyped: keyTyped, 
                            mouseEntered: mouseEntered,
                            mouseExited: mouseExited,
                            mousePressed: mousePressed,
                            mouseReleased: mouseReleased,   
                            mouseDragged: mouseDragged,
                            mouseMoved: mouseMoved,
                            propertyChange: propertyChange
//                          mouseWheelMoved: mouseWheelMoved 
                            );
  return choice;
}



// --------------------------------------------------------------------------------------------------

java.awt.Container Container(ContainerEvent ?-> void componentAdded = null, 
                             ContainerEvent ?-> void componentRemoved = null,
                   
//                           optional anonymous functions from java.awt.Component
    
                             ?String propertyName = null,
                             ComponentEvent ?-> void componentHidden = null,
                             ComponentEvent ?-> void componentMoved = null,
                             ComponentEvent ?-> void componentResized = null,
                             ComponentEvent ?-> void componentShown = null,
                             FocusEvent ?-> void focusGained = null,
                             FocusEvent ?-> void focusLost = null,
                             HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                             HierarchyEvent ?-> void hierarchyAncestorResized = null,
                             HierarchyEvent ?-> void hierarchyChanged = null,
                             InputMethodEvent ?-> void caretPositionChanged = null,
                             InputMethodEvent ?-> void inputMethodTextChanged = null,
                             KeyEvent ?-> void keyPressed = null,
                             KeyEvent ?-> void keyReleased = null,
                             KeyEvent ?-> void keyTyped = null, 
                             MouseEvent ?-> void mouseClicked = null,
                             MouseEvent ?-> void mouseEntered = null,
                             MouseEvent ?-> void mouseExited = null,
                             MouseEvent ?-> void mousePressed = null,
                             MouseEvent ?-> void mouseReleased = null,   
                             MouseEvent ?-> void mouseDragged = null,
                             MouseEvent ?-> void mouseMoved = null,
                             PropertyChangeEvent ?-> void propertyChange = null
//                           MouseWheelEvent ?-> void mouseWheelMoved = null            
                             )
{

  java.awt.Container container = new java.awt.Container();
  
  container.addContainerListeners(componentAdded: componentAdded,
                                  componentRemoved: componentRemoved,
                                  propertyName: propertyName,
                                  componentHidden: componentHidden,
                                  componentMoved: componentMoved,
                                  componentResized: componentResized,
                                  componentShown: componentShown,
                                  focusGained: focusGained,
                                  focusLost: focusLost,
                                  hierarchyAncestorMoved: hierarchyAncestorMoved,
                                  hierarchyAncestorResized: hierarchyAncestorResized,
                                  hierarchyChanged: hierarchyChanged,
                                  caretPositionChanged: caretPositionChanged,
                                  inputMethodTextChanged: inputMethodTextChanged,
                                  keyPressed: keyPressed,
                                  keyReleased: keyReleased,
                                  keyTyped: keyTyped, 
                                  mouseEntered: mouseEntered,
                                  mouseExited: mouseExited,
                                  mousePressed: mousePressed,
                                  mouseReleased: mouseReleased,   
                                  mouseDragged: mouseDragged,
                                  mouseMoved: mouseMoved,
                                  propertyChange: propertyChange
//                                mouseWheelMoved: mouseWheelMoved 
                                  );
  return container;
}



//// --------------------------------------------------------------------------------------------------
//
//DefaultKeyboardFocusManager DefaultKeyboardFocusManager(?String propertyName = null,
//                                                        PropertyChangeEvent ?-> void propertyChange = null,       
//                                                        PropertyChangeEvent ?-> void vetoableChange = null
//                                                        )
//{
//
//  DefaultKeyboardFocusManager manager = new DefaultKeyboardFocusManager();
//  
//  manager.addKeyboardFocusManagerListeners(propertyName: propertyName,
//                                           propertyChange: propertyChange,
//                                           vetoableChange: vetoableChange
//                                           );
//  return manager;
//}




// --------------------------------------------------------------------------------------------------

Dialog Dialog(?java.awt.Dialog ownerDialog = null,
              ?java.awt.Frame ownerFrame = null,
//            ?java.awt.GraphicsConfiguration gc = null,
              ?String title = null,
              boolean modal = false,
              
//            optional anonymous functions from java.awt.Window

              WindowEvent ?-> void windowActivated = null,
              WindowEvent ?-> void windowClosed = null,
              WindowEvent ?-> void windowClosing = null,
              WindowEvent ?-> void windowDeactivated = null,
              WindowEvent ?-> void windowDeiconified = null,
              WindowEvent ?-> void windowIconified = null,
              WindowEvent ?-> void windowOpened = null,
//            WindowEvent ?-> void windowGainedFocus = null,
//            WindowEvent ?-> void windowLostFocus = null,     
//            WindowEvent ?-> void windowStateChanged = null,  
                           
//            optional anonymous functions from java.awt.Container
                          
              ContainerEvent ?-> void componentAdded = null, 
              ContainerEvent ?-> void componentRemoved = null,
                   
//            optional anonymous functions from java.awt.Component
    
              ?String propertyName = null,
              ComponentEvent ?-> void componentHidden = null,
              ComponentEvent ?-> void componentMoved = null,
              ComponentEvent ?-> void componentResized = null,
              ComponentEvent ?-> void componentShown = null,
              FocusEvent ?-> void focusGained = null,
              FocusEvent ?-> void focusLost = null,
              HierarchyEvent ?-> void hierarchyAncestorMoved = null,
              HierarchyEvent ?-> void hierarchyAncestorResized = null,
              HierarchyEvent ?-> void hierarchyChanged = null,
              InputMethodEvent ?-> void caretPositionChanged = null,
              InputMethodEvent ?-> void inputMethodTextChanged = null,
              KeyEvent ?-> void keyPressed = null,
              KeyEvent ?-> void keyReleased = null,
              KeyEvent ?-> void keyTyped = null, 
              MouseEvent ?-> void mouseClicked = null,
              MouseEvent ?-> void mouseEntered = null,
              MouseEvent ?-> void mouseExited = null,
              MouseEvent ?-> void mousePressed = null,
              MouseEvent ?-> void mouseReleased = null,   
              MouseEvent ?-> void mouseDragged = null,
              MouseEvent ?-> void mouseMoved = null,
              PropertyChangeEvent ?-> void propertyChange = null
//            MouseWheelEvent ?-> void mouseWheelMoved = null            
              )
{

  Dialog dialog;
  if(ownerDialog != null) 
  {
     dialog = new Dialog(ownerDialog);
//   if(title != null && gc != null) dialog = new Dialog(ownerDialog,title,modal,gc);     
  }
  if(ownerFrame != null) 
  {
     dialog = new Dialog(ownerFrame);
//   if(title != null && gc != null) return new Dialog(ownerFrame,title,modal,gc);
  }
  else
  {
     // dialog = new Dialog(null,modal);
     // this is possible according to apidoc if GraphicsEnvironment.isHeadless() returns true
     //
     // ---------------------------- apidoc -------------------------------------------------
     //isHeadless
     //public static boolean isHeadless()
     //Tests whether or not a display, keyboard, and mouse can be supported in this environment. 
     //If this method returns true, a HeadlessException is thrown from areas of the Toolkit and 
     //GraphicsEnvironment that are dependent on a display, keyboard, or mouse. 
     //
     //Returns:
     //true if this environment cannot support a display, keyboard, and mouse; false otherwise.
     //Since:
     //1.4 
     //See Also:
     //HeadlessException
     // --------------------------------------------------------------------------------------
     //
     // modal is necessary to disambiguate between Dialog and Frame in the constructor

     dialog = new Dialog(null,modal);
  }
  if(title != null) dialog.setTitle(title);
  dialog.setModal(modal);
    
  dialog.addWindowListeners(windowActivated: windowActivated,
                            windowClosed: windowClosed,
                            windowClosing: windowClosing,
                            windowDeactivated: windowDeactivated,
                            windowDeiconified: windowDeiconified,
                            windowIconified: windowIconified,
                            windowOpened: windowOpened,
//                          windowGainedFocus: windowGainedFocus,
//                          windowLostFocus: windowLostFocus,
//                          windowStateChanged: windowStateChanged,
                            componentAdded: componentAdded,
                            componentRemoved: componentRemoved,
                            propertyName: propertyName,
                            componentHidden: componentHidden,
                            componentMoved: componentMoved,
                            componentResized: componentResized,
                            componentShown: componentShown,
                            focusGained: focusGained,
                            focusLost: focusLost,
                            hierarchyAncestorMoved: hierarchyAncestorMoved,
                            hierarchyAncestorResized: hierarchyAncestorResized,
                            hierarchyChanged: hierarchyChanged,
                            caretPositionChanged: caretPositionChanged,
                            inputMethodTextChanged: inputMethodTextChanged,
                            keyPressed: keyPressed,
                            keyReleased: keyReleased,
                            keyTyped: keyTyped, 
                            mouseEntered: mouseEntered,
                            mouseExited: mouseExited,
                            mousePressed: mousePressed,
                            mouseReleased: mouseReleased,   
                            mouseDragged: mouseDragged,
                            mouseMoved: mouseMoved,
                            propertyChange: propertyChange
//                          mouseWheelMoved: mouseWheelMoved 
                            );
  return dialog;
}



// --------------------------------------------------------------------------------------------------

FileDialog FileDialog(java.awt.Frame ownerFrame,
                      ?String title = null,
                      
                      int mode = LOAD(),
                      
//                    optional anonymous functions from java.awt.Window
        
                      WindowEvent ?-> void windowActivated = null,
                      WindowEvent ?-> void windowClosed = null,
                      WindowEvent ?-> void windowClosing = null,
                      WindowEvent ?-> void windowDeactivated = null,
                      WindowEvent ?-> void windowDeiconified = null,
                      WindowEvent ?-> void windowIconified = null,
                      WindowEvent ?-> void windowOpened = null,
//                    WindowEvent ?-> void windowGainedFocus = null,
//                    WindowEvent ?-> void windowLostFocus = null,     
//                    WindowEvent ?-> void windowStateChanged = null,  
                                   
//                    optional anonymous functions from java.awt.Container
                                  
                      ContainerEvent ?-> void componentAdded = null, 
                      ContainerEvent ?-> void componentRemoved = null,
                           
//                    optional anonymous functions from java.awt.Component
            
                      ?String propertyName = null,
                      ComponentEvent ?-> void componentHidden = null,
                      ComponentEvent ?-> void componentMoved = null,
                      ComponentEvent ?-> void componentResized = null,
                      ComponentEvent ?-> void componentShown = null,
                      FocusEvent ?-> void focusGained = null,
                      FocusEvent ?-> void focusLost = null,
                      HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                      HierarchyEvent ?-> void hierarchyAncestorResized = null,
                      HierarchyEvent ?-> void hierarchyChanged = null,
                      InputMethodEvent ?-> void caretPositionChanged = null,
                      InputMethodEvent ?-> void inputMethodTextChanged = null,
                      KeyEvent ?-> void keyPressed = null,
                      KeyEvent ?-> void keyReleased = null,
                      KeyEvent ?-> void keyTyped = null, 
                      MouseEvent ?-> void mouseClicked = null,
                      MouseEvent ?-> void mouseEntered = null,
                      MouseEvent ?-> void mouseExited = null,
                      MouseEvent ?-> void mousePressed = null,
                      MouseEvent ?-> void mouseReleased = null,   
                      MouseEvent ?-> void mouseDragged = null,
                      MouseEvent ?-> void mouseMoved = null,
                      PropertyChangeEvent ?-> void propertyChange = null
//                    MouseWheelEvent ?-> void mouseWheelMoved = null            
                      )
{

  FileDialog dialog = new FileDialog(ownerFrame);
  if(title != null) dialog.setTitle(title);
  dialog.setMode(mode);
    
  dialog.addWindowListeners(windowActivated: windowActivated,
                            windowClosed: windowClosed,
                            windowClosing: windowClosing,
                            windowDeactivated: windowDeactivated,
                            windowDeiconified: windowDeiconified,
                            windowIconified: windowIconified,
                            windowOpened: windowOpened,
//                          windowGainedFocus: windowGainedFocus,
//                          windowLostFocus: windowLostFocus,
//                          windowStateChanged: windowStateChanged,
                            componentAdded: componentAdded,
                            componentRemoved: componentRemoved,
                            propertyName: propertyName,
                            componentHidden: componentHidden,
                            componentMoved: componentMoved,
                            componentResized: componentResized,
                            componentShown: componentShown,
                            focusGained: focusGained,
                            focusLost: focusLost,
                            hierarchyAncestorMoved: hierarchyAncestorMoved,
                            hierarchyAncestorResized: hierarchyAncestorResized,
                            hierarchyChanged: hierarchyChanged,
                            caretPositionChanged: caretPositionChanged,
                            inputMethodTextChanged: inputMethodTextChanged,
                            keyPressed: keyPressed,
                            keyReleased: keyReleased,
                            keyTyped: keyTyped, 
                            mouseEntered: mouseEntered,
                            mouseExited: mouseExited,
                            mousePressed: mousePressed,
                            mouseReleased: mouseReleased,   
                            mouseDragged: mouseDragged,
                            mouseMoved: mouseMoved,
                            propertyChange: propertyChange
//                          mouseWheelMoved: mouseWheelMoved 
                            );
  return dialog;
}




// --------------------------------------------------------------------------------------------------

Frame Frame(?java.awt.Frame ownerFrame = null,
            ?java.awt.GraphicsConfiguration gc = null,
            ?String title = null,
            
//          optional anonymous functions from java.awt.Window

            WindowEvent ?-> void windowActivated = null,
            WindowEvent ?-> void windowClosed = null,
            WindowEvent ?-> void windowClosing = null,
            WindowEvent ?-> void windowDeactivated = null,
            WindowEvent ?-> void windowDeiconified = null,
            WindowEvent ?-> void windowIconified = null,
            WindowEvent ?-> void windowOpened = null,
//          WindowEvent ?-> void windowGainedFocus = null,
//          WindowEvent ?-> void windowLostFocus = null,     
//          WindowEvent ?-> void windowStateChanged = null,  
                         
//          optional anonymous functions from java.awt.Container
                        
            ContainerEvent ?-> void componentAdded = null, 
            ContainerEvent ?-> void componentRemoved = null,
                 
//          optional anonymous functions from java.awt.Component
  
            ?String propertyName = null,
            ComponentEvent ?-> void componentHidden = null,
            ComponentEvent ?-> void componentMoved = null,
            ComponentEvent ?-> void componentResized = null,
            ComponentEvent ?-> void componentShown = null,
            FocusEvent ?-> void focusGained = null,
            FocusEvent ?-> void focusLost = null,
            HierarchyEvent ?-> void hierarchyAncestorMoved = null,
            HierarchyEvent ?-> void hierarchyAncestorResized = null,
            HierarchyEvent ?-> void hierarchyChanged = null,
            InputMethodEvent ?-> void caretPositionChanged = null,
            InputMethodEvent ?-> void inputMethodTextChanged = null,
            KeyEvent ?-> void keyPressed = null,
            KeyEvent ?-> void keyReleased = null,
            KeyEvent ?-> void keyTyped = null, 
            MouseEvent ?-> void mouseClicked = null,
            MouseEvent ?-> void mouseEntered = null,
            MouseEvent ?-> void mouseExited = null,
            MouseEvent ?-> void mousePressed = null,
            MouseEvent ?-> void mouseReleased = null,   
            MouseEvent ?-> void mouseDragged = null,
            MouseEvent ?-> void mouseMoved = null,
            PropertyChangeEvent ?-> void propertyChange = null
//          MouseWheelEvent ?-> void mouseWheelMoved = null            
            )
{
	
  Frame frame;	
  if(gc != null) frame = new Frame(gc);
  else frame = new Frame();

  if(title != null) frame.setTitle(title);
    
  frame.addWindowListeners(windowActivated: windowActivated,
                           windowClosed: windowClosed,
                           windowClosing: windowClosing,
                           windowDeactivated: windowDeactivated,
                           windowDeiconified: windowDeiconified,
                           windowIconified: windowIconified,
                           windowOpened: windowOpened,
//                         windowGainedFocus: windowGainedFocus,
//                         windowLostFocus: windowLostFocus,
//                         windowStateChanged: windowStateChanged,
                           componentAdded: componentAdded,
                           componentRemoved: componentRemoved,
                           propertyName: propertyName,
                           componentHidden: componentHidden,
                           componentMoved: componentMoved,
                           componentResized: componentResized,
                           componentShown: componentShown,
                           focusGained: focusGained,
                           focusLost: focusLost,
                           hierarchyAncestorMoved: hierarchyAncestorMoved,
                           hierarchyAncestorResized: hierarchyAncestorResized,
                           hierarchyChanged: hierarchyChanged,
                           caretPositionChanged: caretPositionChanged,
                           inputMethodTextChanged: inputMethodTextChanged,
                           keyPressed: keyPressed,
                           keyReleased: keyReleased,
                           keyTyped: keyTyped, 
                           mouseEntered: mouseEntered,
                           mouseExited: mouseExited,
                           mousePressed: mousePressed,
                           mouseReleased: mouseReleased,   
                           mouseDragged: mouseDragged,
                           mouseMoved: mouseMoved,
                           propertyChange: propertyChange
//                         mouseWheelMoved: mouseWheelMoved 
                           );
  return frame;
}



// --------------------------------------------------------------------------------------------------

Label Label(?String text = null,
            int alignment = LEFT(),   
                
//          optional anonymous functions from java.awt.Component
    
            ?String propertyName = null,
            ComponentEvent ?-> void componentHidden = null,
            ComponentEvent ?-> void componentMoved = null,
            ComponentEvent ?-> void componentResized = null,
            ComponentEvent ?-> void componentShown = null,
            FocusEvent ?-> void focusGained = null,
            FocusEvent ?-> void focusLost = null,
            HierarchyEvent ?-> void hierarchyAncestorMoved = null,
            HierarchyEvent ?-> void hierarchyAncestorResized = null,
            HierarchyEvent ?-> void hierarchyChanged = null,
            InputMethodEvent ?-> void caretPositionChanged = null,
            InputMethodEvent ?-> void inputMethodTextChanged = null,
            KeyEvent ?-> void keyPressed = null,
            KeyEvent ?-> void keyReleased = null,
            KeyEvent ?-> void keyTyped = null, 
            MouseEvent ?-> void mouseClicked = null,
            MouseEvent ?-> void mouseEntered = null,
            MouseEvent ?-> void mouseExited = null,
            MouseEvent ?-> void mousePressed = null,
            MouseEvent ?-> void mouseReleased = null,   
            MouseEvent ?-> void mouseDragged = null,
            MouseEvent ?-> void mouseMoved = null,
            PropertyChangeEvent ?-> void propertyChange = null
//          MouseWheelEvent ?-> void mouseWheelMoved = null            
            )
{

  Label label = new Label();
  if(text != null) label.setText(text);
  label.setAlignment(alignment);
  
  label.addLabelListeners(propertyName: propertyName,
                          componentHidden: componentHidden,
                          componentMoved: componentMoved,
                          componentResized: componentResized,
                          componentShown: componentShown,
                          focusGained: focusGained,
                          focusLost: focusLost,
                          hierarchyAncestorMoved: hierarchyAncestorMoved,
                          hierarchyAncestorResized: hierarchyAncestorResized,
                          hierarchyChanged: hierarchyChanged,
                          caretPositionChanged: caretPositionChanged,
                          inputMethodTextChanged: inputMethodTextChanged,
                          keyPressed: keyPressed,
                          keyReleased: keyReleased,
                          keyTyped: keyTyped, 
                          mouseEntered: mouseEntered,
                          mouseExited: mouseExited,
                          mousePressed: mousePressed,
                          mouseReleased: mouseReleased,   
                          mouseDragged: mouseDragged,
                          mouseMoved: mouseMoved,
                          propertyChange: propertyChange
//                        mouseWheelMoved: mouseWheelMoved 
                          );
  return label;
}



// --------------------------------------------------------------------------------------------------

java.awt.List List(int rows = 4,
                   boolean multipleMode = false,   
          
                   ActionEvent ?-> void actionPerformed = null,
                   ItemEvent ?-> void itemStateChanged = null,
                         
//                 optional anonymous functions from java.awt.Component
             
                   ?String propertyName = null,
                   ComponentEvent ?-> void componentHidden = null,
                   ComponentEvent ?-> void componentMoved = null,
                   ComponentEvent ?-> void componentResized = null,
                   ComponentEvent ?-> void componentShown = null,
                   FocusEvent ?-> void focusGained = null,
                   FocusEvent ?-> void focusLost = null,
                   HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                   HierarchyEvent ?-> void hierarchyAncestorResized = null,
                   HierarchyEvent ?-> void hierarchyChanged = null,
                   InputMethodEvent ?-> void caretPositionChanged = null,
                   InputMethodEvent ?-> void inputMethodTextChanged = null,
                   KeyEvent ?-> void keyPressed = null,
                   KeyEvent ?-> void keyReleased = null,
                   KeyEvent ?-> void keyTyped = null, 
                   MouseEvent ?-> void mouseClicked = null,
                   MouseEvent ?-> void mouseEntered = null,
                   MouseEvent ?-> void mouseExited = null,
                   MouseEvent ?-> void mousePressed = null,
                   MouseEvent ?-> void mouseReleased = null,   
                   MouseEvent ?-> void mouseDragged = null,
                   MouseEvent ?-> void mouseMoved = null,
                   PropertyChangeEvent ?-> void propertyChange = null
//                 MouseWheelEvent ?-> void mouseWheelMoved = null            
                   )
{

  java.awt.List list = new java.awt.List(rows,multipleMode);
  
  list.addListListeners(actionPerformed: actionPerformed,
                        itemStateChanged: itemStateChanged,
                        propertyName: propertyName,
                        componentHidden: componentHidden,
                        componentMoved: componentMoved,
                        componentResized: componentResized,
                        componentShown: componentShown,
                        focusGained: focusGained,
                        focusLost: focusLost,
                        hierarchyAncestorMoved: hierarchyAncestorMoved,
                        hierarchyAncestorResized: hierarchyAncestorResized,
                        hierarchyChanged: hierarchyChanged,
                        caretPositionChanged: caretPositionChanged,
                        inputMethodTextChanged: inputMethodTextChanged,
                        keyPressed: keyPressed,
                        keyReleased: keyReleased,
                        keyTyped: keyTyped, 
                        mouseEntered: mouseEntered,
                        mouseExited: mouseExited,
                        mousePressed: mousePressed,
                        mouseReleased: mouseReleased,   
                        mouseDragged: mouseDragged,
                        mouseMoved: mouseMoved,
                        propertyChange: propertyChange
//                      mouseWheelMoved: mouseWheelMoved 
                        );
  return list;
}



// --------------------------------------------------------------------------------------------------

Menu Menu(?String text = null,
          boolean tearoff = false,   
          
//        optional anonymous functions from java.awt.MenuItem   
       
          ActionEvent ?-> void actionPerformed = null
          )
{

  Menu menu = new Menu();
  if(text != null) menu = new Menu(text,tearoff);
  
  menu.addMenuItemListeners(actionPerformed: actionPerformed);
  
  return menu;
}



// --------------------------------------------------------------------------------------------------

MenuItem MenuItem(?String text = null,
                  ?MenuShortcut shortcut = null,   
                  ActionEvent ?-> void actionPerformed = null
                  )
{

  MenuItem item = new MenuItem();
  if(text != null) item.setLabel(text);
  if(shortcut != null) item.setShortcut(shortcut);
  
  item.addMenuItemListeners(actionPerformed: actionPerformed);
  
  return item;
}



// --------------------------------------------------------------------------------------------------

PopupMenu PopupMenu(?String text = null, 
          
//                  optional anonymous functions from java.awt.MenuItem   
       
                    ActionEvent ?-> void actionPerformed = null
                    )
{

  PopupMenu menu = new PopupMenu();
  if(text != null) menu.setLabel(text);
  
  menu.addMenuItemListeners(actionPerformed: actionPerformed);
  
  return menu;
}




// --------------------------------------------------------------------------------------------------

Panel Panel(?java.awt.LayoutManager layout = null,

//          optional anonymous functions from java.awt.Container

            ContainerEvent ?-> void componentAdded = null, 
            ContainerEvent ?-> void componentRemoved = null,
  
//          optional anonymous functions from java.awt.Component

            ?String propertyName = null,
            ComponentEvent ?-> void componentHidden = null,
            ComponentEvent ?-> void componentMoved = null,
            ComponentEvent ?-> void componentResized = null,
            ComponentEvent ?-> void componentShown = null,
            FocusEvent ?-> void focusGained = null,
            FocusEvent ?-> void focusLost = null,
            HierarchyEvent ?-> void hierarchyAncestorMoved = null,
            HierarchyEvent ?-> void hierarchyAncestorResized = null,
            HierarchyEvent ?-> void hierarchyChanged = null,
            InputMethodEvent ?-> void caretPositionChanged = null,
            InputMethodEvent ?-> void inputMethodTextChanged = null,
            KeyEvent ?-> void keyPressed = null,
            KeyEvent ?-> void keyReleased = null,
            KeyEvent ?-> void keyTyped = null, 
            MouseEvent ?-> void mouseClicked = null,
            MouseEvent ?-> void mouseEntered = null,
            MouseEvent ?-> void mouseExited = null,
            MouseEvent ?-> void mousePressed = null,
            MouseEvent ?-> void mouseReleased = null,   
            MouseEvent ?-> void mouseDragged = null,
            MouseEvent ?-> void mouseMoved = null,
            PropertyChangeEvent ?-> void propertyChange = null
//          MouseWheelEvent ?-> void mouseWheelMoved = null            
            )
{

  Panel panel = Panel();
  if(layout != null) panel.setLayout(layout);
  
  panel.addContainerListeners(componentAdded: componentAdded,
                              componentRemoved: componentRemoved,
                              propertyName: propertyName,
                              componentHidden: componentHidden,
                              componentMoved: componentMoved,
                              componentResized: componentResized,
                              componentShown: componentShown,
                              focusGained: focusGained,
                              focusLost: focusLost,
                              hierarchyAncestorMoved: hierarchyAncestorMoved,
                              hierarchyAncestorResized: hierarchyAncestorResized,
                              hierarchyChanged: hierarchyChanged,
                              caretPositionChanged: caretPositionChanged,
                              inputMethodTextChanged: inputMethodTextChanged,
                              keyPressed: keyPressed,
                              keyReleased: keyReleased,
                              keyTyped: keyTyped, 
                              mouseEntered: mouseEntered,
                              mouseExited: mouseExited,
                              mousePressed: mousePressed,
                              mouseReleased: mouseReleased,   
                              mouseDragged: mouseDragged,
                              mouseMoved: mouseMoved,
                              propertyChange: propertyChange
//                            mouseWheelMoved: mouseWheelMoved 
                              );
  return panel;
}



// --------------------------------------------------------------------------------------------------

Scrollbar Scrollbar(int orientation = java.awt.Scrollbar.HORIZONTAL,
                    int value = 0,
                    int visible = 10,
                    int min = 0,
                    int max = 100, 
           
                    AdjustmentEvent ?-> void adjustmentValueChanged = null,
                          
//                  optional anonymous functions from java.awt.Component
              
                    ?String propertyName = null,
                    ComponentEvent ?-> void componentHidden = null,
                    ComponentEvent ?-> void componentMoved = null,
                    ComponentEvent ?-> void componentResized = null,
                    ComponentEvent ?-> void componentShown = null,
                    FocusEvent ?-> void focusGained = null,
                    FocusEvent ?-> void focusLost = null,
                    HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                    HierarchyEvent ?-> void hierarchyAncestorResized = null,
                    HierarchyEvent ?-> void hierarchyChanged = null,
                    InputMethodEvent ?-> void caretPositionChanged = null,
                    InputMethodEvent ?-> void inputMethodTextChanged = null,
                    KeyEvent ?-> void keyPressed = null,
                    KeyEvent ?-> void keyReleased = null,
                    KeyEvent ?-> void keyTyped = null, 
                    MouseEvent ?-> void mouseClicked = null,
                    MouseEvent ?-> void mouseEntered = null,
                    MouseEvent ?-> void mouseExited = null,
                    MouseEvent ?-> void mousePressed = null,
                    MouseEvent ?-> void mouseReleased = null,   
                    MouseEvent ?-> void mouseDragged = null,
                    MouseEvent ?-> void mouseMoved = null,
                    PropertyChangeEvent ?-> void propertyChange = null
//                  MouseWheelEvent ?-> void mouseWheelMoved = null            
                    )
{

  Scrollbar scrollbar = new Scrollbar(orientation,value,visible,min,max);
  
  scrollbar.addScrollbarListeners(adjustmentValueChanged: adjustmentValueChanged,
                                  propertyName: propertyName,
                                  componentHidden: componentHidden,
                                  componentMoved: componentMoved,
                                  componentResized: componentResized,
                                  componentShown: componentShown,
                                  focusGained: focusGained,
                                  focusLost: focusLost,
                                  hierarchyAncestorMoved: hierarchyAncestorMoved,
                                  hierarchyAncestorResized: hierarchyAncestorResized,
                                  hierarchyChanged: hierarchyChanged,
                                  caretPositionChanged: caretPositionChanged,
                                  inputMethodTextChanged: inputMethodTextChanged,
                                  keyPressed: keyPressed,
                                  keyReleased: keyReleased,
                                  keyTyped: keyTyped, 
                                  mouseEntered: mouseEntered,
                                  mouseExited: mouseExited,
                                  mousePressed: mousePressed,
                                  mouseReleased: mouseReleased,   
                                  mouseDragged: mouseDragged,
                                  mouseMoved: mouseMoved,
                                  propertyChange: propertyChange
//                                mouseWheelMoved: mouseWheelMoved 
                                  );
  return scrollbar;
}



// --------------------------------------------------------------------------------------------------

ScrollPane ScrollPane(int policy = java.awt.ScrollPane.SCROLLBARS_AS_NEEDED,

//                    optional anonymous functions from java.awt.Container

                      ContainerEvent ?-> void componentAdded = null, 
                      ContainerEvent ?-> void componentRemoved = null,
                   
//                    optional anonymous functions from java.awt.Component
    
                      ?String propertyName = null,
                      ComponentEvent ?-> void componentHidden = null,
                      ComponentEvent ?-> void componentMoved = null,
                      ComponentEvent ?-> void componentResized = null,
                      ComponentEvent ?-> void componentShown = null,
                      FocusEvent ?-> void focusGained = null,
                      FocusEvent ?-> void focusLost = null,
                      HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                      HierarchyEvent ?-> void hierarchyAncestorResized = null,
                      HierarchyEvent ?-> void hierarchyChanged = null,
                      InputMethodEvent ?-> void caretPositionChanged = null,
                      InputMethodEvent ?-> void inputMethodTextChanged = null,
                      KeyEvent ?-> void keyPressed = null,
                      KeyEvent ?-> void keyReleased = null,
                      KeyEvent ?-> void keyTyped = null, 
                      MouseEvent ?-> void mouseClicked = null,
                      MouseEvent ?-> void mouseEntered = null,
                      MouseEvent ?-> void mouseExited = null,
                      MouseEvent ?-> void mousePressed = null,
                      MouseEvent ?-> void mouseReleased = null,   
                      MouseEvent ?-> void mouseDragged = null,
                      MouseEvent ?-> void mouseMoved = null,
                      PropertyChangeEvent ?-> void propertyChange = null
//                    MouseWheelEvent ?-> void mouseWheelMoved = null            
                      )
{

  ScrollPane scrollpane = new ScrollPane(policy);
  
  scrollpane.addContainerListeners(componentAdded: componentAdded,
                                   componentRemoved: componentRemoved,
                                   propertyName: propertyName,
                                   componentHidden: componentHidden,
                                   componentMoved: componentMoved,
                                   componentResized: componentResized,
                                   componentShown: componentShown,
                                   focusGained: focusGained,
                                   focusLost: focusLost,
                                   hierarchyAncestorMoved: hierarchyAncestorMoved,
                                   hierarchyAncestorResized: hierarchyAncestorResized,
                                   hierarchyChanged: hierarchyChanged,
                                   caretPositionChanged: caretPositionChanged,
                                   inputMethodTextChanged: inputMethodTextChanged,
                                   keyPressed: keyPressed,
                                   keyReleased: keyReleased,
                                   keyTyped: keyTyped, 
                                   mouseEntered: mouseEntered,
                                   mouseExited: mouseExited,
                                   mousePressed: mousePressed,
                                   mouseReleased: mouseReleased,   
                                   mouseDragged: mouseDragged,
                                   mouseMoved: mouseMoved,
                                   propertyChange: propertyChange
//                                 mouseWheelMoved: mouseWheelMoved 
                                   );
  return scrollpane;
}



// --------------------------------------------------------------------------------------------------

TextArea TextArea(?String text = null,
                  int rows = 10,
                  int columns = 30,
                  int policy = java.awt.TextArea.SCROLLBARS_VERTICAL_ONLY,   
                  
//                optional anonymous functions from java.awt.TextComponent

                  TextEvent ?-> void textValueChanged = null,
                
//                optional anonymous functions from java.awt.Component
          
                  ?String propertyName = null,
                  ComponentEvent ?-> void componentHidden = null,
                  ComponentEvent ?-> void componentMoved = null,
                  ComponentEvent ?-> void componentResized = null,
                  ComponentEvent ?-> void componentShown = null,
                  FocusEvent ?-> void focusGained = null,
                  FocusEvent ?-> void focusLost = null,
                  HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                  HierarchyEvent ?-> void hierarchyAncestorResized = null,
                  HierarchyEvent ?-> void hierarchyChanged = null,
                  InputMethodEvent ?-> void caretPositionChanged = null,
                  InputMethodEvent ?-> void inputMethodTextChanged = null,
                  KeyEvent ?-> void keyPressed = null,
                  KeyEvent ?-> void keyReleased = null,
                  KeyEvent ?-> void keyTyped = null, 
                  MouseEvent ?-> void mouseClicked = null,
                  MouseEvent ?-> void mouseEntered = null,
                  MouseEvent ?-> void mouseExited = null,
                  MouseEvent ?-> void mousePressed = null,
                  MouseEvent ?-> void mouseReleased = null,   
                  MouseEvent ?-> void mouseDragged = null,
                  MouseEvent ?-> void mouseMoved = null,
                  PropertyChangeEvent ?-> void propertyChange = null
//                MouseWheelEvent ?-> void mouseWheelMoved = null            
                  )
{

  TextArea area;
  if(text != null) area = new TextArea(text,rows,columns,policy);
  else area = new TextArea(rows,columns);
  
  area.addTextComponentListeners(textValueChanged: textValueChanged,
                                 propertyName: propertyName,
                                 componentHidden: componentHidden,
                                 componentMoved: componentMoved,
                                 componentResized: componentResized,
                                 componentShown: componentShown,
                                 focusGained: focusGained,
                                 focusLost: focusLost,
                                 hierarchyAncestorMoved: hierarchyAncestorMoved,
                                 hierarchyAncestorResized: hierarchyAncestorResized,
                                 hierarchyChanged: hierarchyChanged,
                                 caretPositionChanged: caretPositionChanged,
                                 inputMethodTextChanged: inputMethodTextChanged,
                                 keyPressed: keyPressed,
                                 keyReleased: keyReleased,
                                 keyTyped: keyTyped, 
                                 mouseEntered: mouseEntered,
                                 mouseExited: mouseExited,
                                 mousePressed: mousePressed,
                                 mouseReleased: mouseReleased,   
                                 mouseDragged: mouseDragged,
                                 mouseMoved: mouseMoved,
                                 propertyChange: propertyChange
//                              mouseWheelMoved: mouseWheelMoved 
                                 );
  return area;
}



// --------------------------------------------------------------------------------------------------

TextComponent TextComponent(?String text = null,
                            TextEvent ?-> void textValueChanged = null,
                
//                          optional anonymous functions from java.awt.Component
          
                            ?String propertyName = null,
                            ComponentEvent ?-> void componentHidden = null,
                            ComponentEvent ?-> void componentMoved = null,
                            ComponentEvent ?-> void componentResized = null,
                            ComponentEvent ?-> void componentShown = null,
                            FocusEvent ?-> void focusGained = null,
                            FocusEvent ?-> void focusLost = null,
                            HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                            HierarchyEvent ?-> void hierarchyAncestorResized = null,
                            HierarchyEvent ?-> void hierarchyChanged = null,
                            InputMethodEvent ?-> void caretPositionChanged = null,
                            InputMethodEvent ?-> void inputMethodTextChanged = null,
                            KeyEvent ?-> void keyPressed = null,
                            KeyEvent ?-> void keyReleased = null,
                            KeyEvent ?-> void keyTyped = null, 
                            MouseEvent ?-> void mouseClicked = null,
                            MouseEvent ?-> void mouseEntered = null,
                            MouseEvent ?-> void mouseExited = null,
                            MouseEvent ?-> void mousePressed = null,
                            MouseEvent ?-> void mouseReleased = null,   
                            MouseEvent ?-> void mouseDragged = null,
                            MouseEvent ?-> void mouseMoved = null,
                            PropertyChangeEvent ?-> void propertyChange = null
//                          MouseWheelEvent ?-> void mouseWheelMoved = null            
                            )
{

  TextComponent component = new TextComponent(text);
  
  component.addTextComponentListeners(textValueChanged: textValueChanged,
                                      propertyName: propertyName,
                                      componentHidden: componentHidden,
                                      componentMoved: componentMoved,
                                      componentResized: componentResized,
                                      componentShown: componentShown,
                                      focusGained: focusGained,
                                      focusLost: focusLost,
                                      hierarchyAncestorMoved: hierarchyAncestorMoved,
                                      hierarchyAncestorResized: hierarchyAncestorResized,
                                      hierarchyChanged: hierarchyChanged,
                                      caretPositionChanged: caretPositionChanged,
                                      inputMethodTextChanged: inputMethodTextChanged,
                                      keyPressed: keyPressed,
                                      keyReleased: keyReleased,
                                      keyTyped: keyTyped, 
                                      mouseEntered: mouseEntered,
                                      mouseExited: mouseExited,
                                      mousePressed: mousePressed,
                                      mouseReleased: mouseReleased,   
                                      mouseDragged: mouseDragged,
                                      mouseMoved: mouseMoved,
                                      propertyChange: propertyChange
//                                    mouseWheelMoved: mouseWheelMoved 
                                      );
  return component;
}



// --------------------------------------------------------------------------------------------------

TextField TextField(?String text = null,
                    int columns = 30,  
                    ActionEvent ?-> void actionPerformed = null,
                    
//                  optional anonymous functions from java.awt.TextComponent
  
                    TextEvent ?-> void textValueChanged = null,
                  
//                  optional anonymous functions from java.awt.Component
            
                    ?String propertyName = null,
                    ComponentEvent ?-> void componentHidden = null,
                    ComponentEvent ?-> void componentMoved = null,
                    ComponentEvent ?-> void componentResized = null,
                    ComponentEvent ?-> void componentShown = null,
                    FocusEvent ?-> void focusGained = null,
                    FocusEvent ?-> void focusLost = null,
                    HierarchyEvent ?-> void hierarchyAncestorMoved = null,
                    HierarchyEvent ?-> void hierarchyAncestorResized = null,
                    HierarchyEvent ?-> void hierarchyChanged = null,
                    InputMethodEvent ?-> void caretPositionChanged = null,
                    InputMethodEvent ?-> void inputMethodTextChanged = null,
                    KeyEvent ?-> void keyPressed = null,
                    KeyEvent ?-> void keyReleased = null,
                    KeyEvent ?-> void keyTyped = null, 
                    MouseEvent ?-> void mouseClicked = null,
                    MouseEvent ?-> void mouseEntered = null,
                    MouseEvent ?-> void mouseExited = null,
                    MouseEvent ?-> void mousePressed = null,
                    MouseEvent ?-> void mouseReleased = null,   
                    MouseEvent ?-> void mouseDragged = null,
                    MouseEvent ?-> void mouseMoved = null,
                    PropertyChangeEvent ?-> void propertyChange = null
//                  MouseWheelEvent ?-> void mouseWheelMoved = null            
                    )
{

  TextField field = new TextField();
  if(text != null) field.setText(text);
  field.setColumns(columns);
  
  field.addTextFieldListeners(actionPerformed: actionPerformed,
                              textValueChanged: textValueChanged,
                              propertyName: propertyName,
                              componentHidden: componentHidden,
                              componentMoved: componentMoved,
                              componentResized: componentResized,
                              componentShown: componentShown,
                              focusGained: focusGained,
                              focusLost: focusLost,
                              hierarchyAncestorMoved: hierarchyAncestorMoved,
                              hierarchyAncestorResized: hierarchyAncestorResized,
                              hierarchyChanged: hierarchyChanged,
                              caretPositionChanged: caretPositionChanged,
                              inputMethodTextChanged: inputMethodTextChanged,
                              keyPressed: keyPressed,
                              keyReleased: keyReleased,
                              keyTyped: keyTyped, 
                              mouseEntered: mouseEntered,
                              mouseExited: mouseExited,
                              mousePressed: mousePressed,
                              mouseReleased: mouseReleased,   
                              mouseDragged: mouseDragged,
                              mouseMoved: mouseMoved,
                              propertyChange: propertyChange
//                            mouseWheelMoved: mouseWheelMoved 
                              );
  return field;
}



// --------------------------------------------------------------------------------------------------

Window Window(?java.awt.Frame ownerFrame = null,
              ?java.awt.Window ownerWindow = null,
              ?java.awt.GraphicsConfiguration gc = null,
              
              WindowEvent ?-> void windowActivated = null,
              WindowEvent ?-> void windowClosed = null,
              WindowEvent ?-> void windowClosing = null,
              WindowEvent ?-> void windowDeactivated = null,
              WindowEvent ?-> void windowDeiconified = null,
              WindowEvent ?-> void windowIconified = null,
              WindowEvent ?-> void windowOpened = null,
//            WindowEvent ?-> void windowGainedFocus = null,
//            WindowEvent ?-> void windowLostFocus = null,     
//            WindowEvent ?-> void windowStateChanged = null,  
                           
//            optional anonymous functions from java.awt.Container
                          
              ContainerEvent ?-> void componentAdded = null, 
              ContainerEvent ?-> void componentRemoved = null,
                   
//            optional anonymous functions from java.awt.Component
    
              ?String propertyName = null,
              ComponentEvent ?-> void componentHidden = null,
              ComponentEvent ?-> void componentMoved = null,
              ComponentEvent ?-> void componentResized = null,
              ComponentEvent ?-> void componentShown = null,
              FocusEvent ?-> void focusGained = null,
              FocusEvent ?-> void focusLost = null,
              HierarchyEvent ?-> void hierarchyAncestorMoved = null,
              HierarchyEvent ?-> void hierarchyAncestorResized = null,
              HierarchyEvent ?-> void hierarchyChanged = null,
              InputMethodEvent ?-> void caretPositionChanged = null,
              InputMethodEvent ?-> void inputMethodTextChanged = null,
              KeyEvent ?-> void keyPressed = null,
              KeyEvent ?-> void keyReleased = null,
              KeyEvent ?-> void keyTyped = null, 
              MouseEvent ?-> void mouseClicked = null,
              MouseEvent ?-> void mouseEntered = null,
              MouseEvent ?-> void mouseExited = null,
              MouseEvent ?-> void mousePressed = null,
              MouseEvent ?-> void mouseReleased = null,   
              MouseEvent ?-> void mouseDragged = null,
              MouseEvent ?-> void mouseMoved = null,
              PropertyChangeEvent ?-> void propertyChange = null
//            MouseWheelEvent ?-> void mouseWheelMoved = null            
              )
{
  // don't know how to disambiguate another way (java.awt.Window has no default construcotr)
  ?java.awt.Frame dummyFrame = null;
  Window window = new Window(dummyFrame);	
  if(ownerFrame != null) window = new Window(ownerFrame);
  if(ownerWindow != null && gc != null) window = new Window(ownerWindow,gc);
  if(ownerWindow != null && gc == null) window = new Window(ownerWindow);
    
  window.addWindowListeners(windowActivated: windowActivated,
                            windowClosed: windowClosed,
                            windowClosing: windowClosing,
                            windowDeactivated: windowDeactivated,
                            windowDeiconified: windowDeiconified,
                            windowIconified: windowIconified,
                            windowOpened: windowOpened,
//                          windowGainedFocus: windowGainedFocus,
//                          windowLostFocus: windowLostFocus,
//                          windowStateChanged: windowStateChanged,
                            componentAdded: componentAdded,
                            componentRemoved: componentRemoved,
                            propertyName: propertyName,
                            componentHidden: componentHidden,
                            componentMoved: componentMoved,
                            componentResized: componentResized,
                            componentShown: componentShown,
                            focusGained: focusGained,
                            focusLost: focusLost,
                            hierarchyAncestorMoved: hierarchyAncestorMoved,
                            hierarchyAncestorResized: hierarchyAncestorResized,
                            hierarchyChanged: hierarchyChanged,
                            caretPositionChanged: caretPositionChanged,
                            inputMethodTextChanged: inputMethodTextChanged,
                            keyPressed: keyPressed,
                            keyReleased: keyReleased,
                            keyTyped: keyTyped, 
                            mouseEntered: mouseEntered,
                            mouseExited: mouseExited,
                            mousePressed: mousePressed,
                            mouseReleased: mouseReleased,   
                            mouseDragged: mouseDragged,
                            mouseMoved: mouseMoved,
                            propertyChange: propertyChange
//                          mouseWheelMoved: mouseWheelMoved 
                            );
  return window;
}


//// --------------------------------------------------------------------------------------------------
//
//DragSource DragSource(DragSourceDropEvent ?-> void dsDragDropEnd = null,
//                      DragSourceDragEvent ?-> void dsDragEnter = null,
//                      DragSourceDragEvent ?-> void dsDragOver = null,
//                      DragSourceDragEvent ?-> void dsDropActionChanged = null,
//                      DragSourceEvent ?-> void dsDragExit = null
//                      DragSourceDragEvent ?-> void dragMouseMoved
//                      )
//{
//   DragSource source = new DragSource();
//   
//   source.addDragSourceListeners(dsDragDropEnd: dsDragDropEnd,
//                                 dsDragEnter: dsDragEnter,
//                                 dsDragOver: dsDragOver,
//                                 dsDropActionChanged: dsDropActionChanged,
//                                 dsDragExit: dsDragExit,
//                                 dragMouseMoved: dragMouseMoved,
//                                 dragMouseMoved: dragMouseMoved
//                                 ));
//   return source;
//}


// --------------------------------------------------------------------------------------------------

DragSourceContext DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer dscp,
                                    DragGestureEvent trigger,
                                    Cursor dragCursor,
                                    Image dragImage,
                                    Point offset,
                                    Transferable transferable,
                                    DragSourceListener dsl,

                                    DragSourceDropEvent ?-> void dsDragDropEnd = null,
                                    DragSourceDragEvent ?-> void dsDragEnter = null,
                                    DragSourceDragEvent ?-> void dsDragOver = null,
                                    DragSourceDragEvent ?-> void dsDropActionChanged = null,
                                    DragSourceEvent ?-> void dsDragExit = null
                                    )
{
   DragSourceContext context = new DragSourceContext(dscp,trigger,dragCursor,dragImage,offset,transferable,dsl);
   
   context.addDragSourceContextListeners(dsDragDropEnd: dsDragDropEnd,
                                         dsDragEnter: dsDragEnter,
                                         dsDragOver: dsDragOver,
                                         dsDropActionChanged: dsDropActionChanged,
                                         dsDragExit: dsDragExit
                                         );
   return context; 
}


// --------------------------------------------------------------------------------------------------

DropTarget DropTarget(?Component component = null,
                      ?DropTargetListener dtl = null,
                      ?FlavorMap flavor = null,
                      boolean active = true,
                      int ops = java.awt.dnd.DnDConstants.ACTION_COPY_OR_MOVE,

                      DropTargetDropEvent ?-> void dtDrop = null,
                      DropTargetDragEvent ?-> void dtDragEnter = null,
                      DropTargetDragEvent ?-> void dtDragOver = null,
                      DropTargetDragEvent ?-> void dtDropActionChanged = null,
                      DropTargetEvent ?-> void dtDragExit = null
                      )
{
   DropTarget target = new DropTarget();
   if(component != null && dtl != null) target = new DropTarget(component,ops,dtl,active);
   if(component != null && dtl != null && flavor != null) target = new DropTarget(component,ops,dtl,active,flavor);
   target.setActive(active);
   target.setFlavorMap(flavor);
   
   target.addDropTargetListeners(dtDrop: dtDrop,
                                 dtDragEnter: dtDragEnter,
                                 dtDragOver: dtDragOver,
                                 dtDropActionChanged: dtDropActionChanged,
                                 dtDragExit: dtDragExit
                                 );
   return target; 
}                                                       