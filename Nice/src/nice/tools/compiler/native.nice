/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2002                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package nice.tools.compiler;

/**
   Produce native programs if an external native compiler is available.
   Curently interfaces with gcj.

   @version $Date$
   @author Daniel Bonniot (bonniot@users.sourceforge.net)
 */

void produceNativeProgram(String pkg, String output)
{
  compileWithGcj(pkg, output);
}

void compileWithGcj(String pkg, String output)
{
  ?String gcj = System.getProperty("gcj");
  if (gcj == null)
    {
      fail("gcj was not found in the path");
      return;
    }

  try{
    Process p = Runtime.getRuntime().exec
      ([gcj, "--main=" + pkg + ".package", 
        "-o", output, output + ".jar" ]);
    p.waitFor();
    if (p.exitValue() != 0)
      fail();
  }
  catch(java.io.IOException e) {
    fail(e.getMessage());
  }
  catch(java.lang.SecurityException e) {
    fail(e.getMessage());
  }
}

void fail(?String msg = null)
{
  print("Native compilation with gcj failed");
  if (msg != null)
    println(": " + msg);
  else
    System.out.println();
}
