/// PASS
  new Flowlet();
  /// Toplevel
  class Flowlet {
    java.util.Set<String> connectors = new java.util.HashSet();
  }

/// PASS
  List<String> l = new LinkedList();
  l.add("AA");
  assert (l.contains("AA"));

/// PASS
  int nSize = 10;
  ArrayList<int> L1 = new ArrayList(nSize);
  for (int j = 1; j <= nSize; j++) L1.add(j);

  Collections.reverse(L1);
  assert L1[0] == nSize;

/// PASS
  ArrayList<int> alist = new ArrayList();
  alist.add(10);
  alist.remove(10);

/// PASS
  int[] a = [ 1, 10, 3 ];
  a.sort((int i, int j) => j - i);
  assert a[0] == 10;

  String[] s = [ "a", "aa", "aaa" ];
  s.sort((String s1, String s2) => s2.length - s1.length);
  assert s[0] == "aaa";

  List<String> list = [ "C", "BA", "BB", "A" ];
  sort(list, (String s1, String s2) => s1.compareTo(s2));
  assert list[0] == "A";
  assert list[1] == "BA";
