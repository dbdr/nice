/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2001                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package regtest.basic;

/**
   Features used in regtest.multipkg

   regtest.basic is first compiled, then regtest.multipkg loads
   a compiled version of it.
   This is useful to check how the compiler behaves with compiled
   packages.

   @version $Date$
   @author Daniel Bonniot (Daniel.Bonniot@inria.fr)
 */

// return zero, but uses a Literal to store it.
int getZero()
{
  Ref<int> id = new Ref();
  id.value = 0;
  return id.value;
}

// Check that the correct overloaded method is called from compiled packages
// This can trigger mangling bugs if they existed

int overload1(int) = 1;
int overload1(int, int) = 2;

int overload2(int, int) = 2;
int overload2(int) = 1;

class Multi
{
  alike polymorphic1() = this;

  alike polymorphic2();
  polymorphic2() = this;
}
