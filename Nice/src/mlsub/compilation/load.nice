/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2003                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package mlsub.compilation;

/**
   Load modules, and resolve the identifiers, but do not compile them.

   @author Daniel Bonniot (bonniot@users.sourceforge.net)
 */

void loadComponent(Compilation compilation, List<Module> modules)
{
  modules.foreach(Module m => m.scope());
  modules.foreach(Module m => m.load());

  notNull(compilation.root).freezeGlobalContext();

  try {
    modules.foreach(Module m => m.typedResolve());
  }
  finally {
    notNull(compilation.root).unfreezeGlobalContext();
  }

  modules.foreach(Module m => m.localResolve());
}

List<List<Module>> load(mlsub.compilation.Compilation compilation)
{
  List<List<Module>> sccs =
    stronglyConnectedComponents
      (notNull(compilation.root), Module m => m.getRequirements());

  sccs.foreach(List<Module> scc => 
	       loadComponent(compilation, scc));

  return sccs;
}
