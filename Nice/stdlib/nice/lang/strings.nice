/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2001                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

/**
   String manipulation functions.
*/

package nice.lang;

/****************************************************************
 * Strings
 ****************************************************************/

<Any R> String `+`(String,R);
`+`(s@String,o) = s.concat(toString(o));

String replace(String source, char c, String with)
{
  StringBuffer res = new StringBuffer();
  char[] tab = source.toCharArray();
  int pos = 0;
  int newpos;
  while ((newpos = source.indexOf(c, pos)) != -1)
    {
      res.append(tab, pos, newpos - pos);
      res.append(with);
      pos = newpos + 1;
    }
  return res.append(tab, pos, tab.length - pos).toString();
}

char get(String s, int index) = native char String.charAt(int);
char charAt(String s, int index) = native char String.charAt(int);
