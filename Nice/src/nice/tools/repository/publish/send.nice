/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2004                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

package nice.tools.repository.publish;

import java.io.*;

boolean send(String datedVer, String jar, String dest)
{
  let ident = dest.substring(0, dest.indexOf(':'));
  let dir = dest.substring(dest.indexOf(':') + 1);

  println("ssh " ident " mkdir -p " dir);
  Process p = Runtime.getRuntime().exec(["ssh", ident, "mkdir", "-p", dir]);
  if (waitFor(p, new OutputStreamWriter(System.out)) != 0)
    {
      println("\nPublication failed.");
      return false;
    }

  println("scp " jar " " dest);
  p = Runtime.getRuntime().exec(["scp", jar, dest]);
  if (waitFor(p, new OutputStreamWriter(System.out)) != 0)
    {
      println("\nPublication failed.");
      return false;
    }

  let temp = File.createTempFile("latest", "tmp");
  using (let out = new PrintWriter(new FileWriter(temp))) {
    out.println(datedVer);
  }
  p = Runtime.getRuntime().exec(["scp", temp.getPath(), dest + "/latest"]);
  if (waitFor(p, new OutputStreamWriter(System.out)) != 0)
    {
      println("\nPublication failed.");
      return false;
    }

  return true;
}
