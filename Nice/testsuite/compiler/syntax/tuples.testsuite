/// PASS
  (String name, (String a, String b)) = ("name", ("1","2"));
  assert name == "name";
  assert a == "1" && b == "2";

/// PASS
  ((String a, String b), String name) = (("1","2"), "name");
  assert name == "name";
  assert a == "1" && b == "2";

/// PASS
  // Checks that we do not confuse the type with a tuple.
  (String, String) -> String s = (String s1, String s2)=>s1;

/// PASS
  // Checks that we do not confuse the first element with a nested tuple.
  ((String, String) -> String s, int i) = ((String s1, String s2)=>s1, 0);

/// PASS
  let x = 1, y = 2;
  (x,y).println();

/// PASS
  var String x, y;
  (x,y) = ("1","2");
  assert x.equals("1") && y.equals("2");

/// FAIL
  /*/// FAIL HERE */(String s, int i) = (5, "abc");

/// PASS
  int x;
  int y;
  int z;
  (x, (y, z)) = (1, (2, 3));

/// PASS
  int x;
  int y;
  (x, (y, int z)) = (1, (2, 3));

/// PASS
  int x;
  (x, (int, int) tuple) = (1, (2, 3));

/// PASS
  let x = new X();
  (x.a , x.b) = (x.b , x.a);
  assert x.a==10 && x.b==5;
  /// Toplevel
  class X {
    int a = 5;
    int b = 10;
  }
