/**************************************************************************/
/*                                N I C E                                 */
/*             A high-level object-oriented research language             */
/*                        (c) Daniel Bonniot 2004                         */
/*                                                                        */
/*  This program is free software; you can redistribute it and/or modify  */
/*  it under the terms of the GNU General Public License as published by  */
/*  the Free Software Foundation; either version 2 of the License, or     */
/*  (at your option) any later version.                                   */
/*                                                                        */
/**************************************************************************/

// TODO: this class belongs in bossa.link
package bossa.syntax;

import bossa.util.*;

/**
   An alternative present in the source code.

 */
public class SourceAlternative extends Alternative implements Located
{
  private MethodImplementation implementation;

  location() = implementation.location();

  printLocated() = implementation.location() + ": " + this.toString();

  methodExp() = implementation.getRefExp();
}

public Alternative createSourceAlternative(MethodImplementation implementation)
{
  let res = new SourceAlternative(implementation.getDeclaration().getName().toString(),
	implementation.getPatterns(), implementation: implementation);

  res.add(implementation.getDeclaration().getFullName());

  ?java.util.Iterator<MethodDeclaration> specializedMethods = 
      cast(implementation.getDeclaration().listSpecializedMethods());
  if (specializedMethods != null)
    while(specializedMethods.hasNext())
      res.add(specializedMethods.next().getFullName());

  return res;
}
