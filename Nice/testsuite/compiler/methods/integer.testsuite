/// PASS
  /// Toplevel
  long fac(long n);
  fac(long n) = n*fac(n-1);
  fac(1) = 1;
  
/// PASS
  /// Toplevel
  int fib(int n);
  fib(int n) = fib(n-2) + fib(n-1);
  fib(1) = 1;
  fib(2) = 1;

/// FAIL  
  /// Toplevel
  int /* /// FAIL HERE */ ack(int x, int y);
  // missing (0,0) case
  ack(0, int y) = y+1;
  ack(int x, 0) = ack(x-1, 1);
  ack(int x, int y) = ack(x-1, ack(x, y-1));


/// FAIL  
  /// Toplevel
  String /* /// FAIL HERE */ toStr(char);
  toStr(char x) = "";
  toStr('a') = "a";
  toStr('b') = "b";
  toStr('a') = "a";

/// PASS
  /// package a
  assert(bar(-1)==1);
  /// Toplevel
  int bar(int);
  bar(int n) = n;
  bar(-1) = 1;
  bar(-12389) = 12389;
  bar(3920) = -3920;

  /// package b import a
  {}  

/// PASS
  /// package a
  /// Toplevel
  boolean foo(char);
  foo(char x) = false;
  foo('\1') = true;
  foo('\3') = false;
  /// package b import a
  assert foo('\1');

/// FAIL
 /// Toplevel
 // The default case is missing
void /* /// FAIL HERE */ foo(short);
foo(0) {}
foo(1) {}

/// PASS
  /// Toplevel
  int fib(int n);
  fib(n) = fib(n-2) + fib(n-1);
  fib(1) = 1;
  fib(2) = 1;

/// PASS  
  /// Toplevel
  String toStr(char);
  toStr(char x) = "";
  toStr('a') = "a";
  toStr('b') = "b";

/// FAIL
  /// Toplevel
  void foo(long);
  foo(long n) {}
  foo( /* /// FAIL HERE */ int n) {}

/// FAIL
  /// Toplevel
  void foo(long);
  foo(long n) {}
  foo(# /* /// FAIL HERE */ int n) {}

/// PASS
  /// Toplevel
  String getStr(int i, String str); 
  getStr(0, String str) = "no "+str; 
  getStr(1, String str) = "one "+str; 
  getStr(2, String str) = "many "+str; 
  getStr(i, String str) = "unknown code"; 

/// PASS
  /// package a
  /// Toplevel
  int foo(int n);
  foo(n) = 0;
  foo(n>0) = 1;
  foo(n>=5) = 2;
  foo(n<-3) = 3;
  foo(n<0) = 4;
  /// package b import a
  assert foo(0)==0;
  assert foo(3)==1;
  assert foo(8)==2;
  assert foo(-7)==3;
  assert foo(-2)==4;

/// PASS
  assert foo(5);
  assert !foo(-3);
  /// Toplevel
  boolean foo(int n);
  foo(n>=0) = true;
  foo(n<0) = false;  

/// FAIL
  /// Toplevel
  void /* /// FAIL HERE */ foo(int n);
  foo(n>5) {}
  foo(n<=3) {}

/// PASS
  assert foo(2)==2;
  assert foo(3)==1;
  assert foo(4)==0;
  /// Toplevel
  int foo(int n);
  foo(n>=4) = 0;
  foo(3) = 1;  
  foo(n<3) = 2;

/// FAIL
  /// Toplevel
  void /* /// FAIL HERE */ foo(int n);
  foo(n) {}
  foo(n>=5) {}
  foo(n<10) {}

/// PASS
  assert foo(2)==2;
  assert foo(3)==1;
  assert foo(4)==0;
  /// Toplevel
  int foo(int n);
  foo(n>2) = 0;
  foo(3) = 1;  
  foo(n<=3) = 2;

/// PASS
  assert foo(131)==131;
  /// Toplevel
  int foo(int n);
  foo(n) = 0;
  foo(n>1) = n;  

/// FAIL
  /// Toplevel
  void /* /// FAIL HERE */ foo(int n, int m);
  foo(n>0, m) {}
  foo(n, m>0) {}
  foo(n, m) {}

/// PASS
  assert foo(1,1) == 1;
  assert foo(1,-1) == 0;
  assert foo(-1,1) == 2;
  assert foo(-1,-1) == 3;
  /// Toplevel
  int foo(int n,int m);
  foo(n>0, m<=0) = 0;
  foo(n>0, m>0)  = 1;
  foo(n<=0, m>0) = 2;
  foo(n<=0, m<=0) = 3;

/// FAIL
  /// Toplevel
  void /* /// FAIL HERE */ foo(int n);
  foo(n) {}
  foo(n>5) {}
  foo(n>5) {}

/// PASS
  assert foo(6) == 6;
  assert foo(5) == 1;
  /// Toplevel
  int foo(int n);
  foo(n<=3) = 0;
  foo(n>3) = n;
  foo(4) = 0;
  foo(5) = 1;

/// PASS
  /// package a
  /// Toplevel
  boolean foo(char c);
  foo(c) = false;
  foo('#') = true;
  foo('(') = false;
  /// package b import a
  assert foo('#');

/// PASS
  /// Toplevel
  int g(int m, int n);
  g(m, n<0) = 1;
  g(m, n>=0) = 1;

/// PASS
  /// Toplevel
  int g(int m, int n);
  g(m<0, n) = 1;
  g(m>=0, n) = 1;

/// FAIL
  /// Toplevel
  void /* /// FAIL HERE */ foo(int n);
  foo(n<=1) {}
  foo(n>=0) {}

/// PASS
  /// package a
  /// Toplevel
  int foo(char c);
  foo(c) = 0;
  foo('\\') = 1;
  foo('\'') = 2;
  /// package b import a
  assert foo('\\') == 1;
  assert foo('\'') == 2;

/// PASS
  /// Toplevel
  void foo(int x, int y) {}
  foo(3, y>5) {}
  foo(x>5, 3) {}
